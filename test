local UIq = Instance.new("ScreenGui")
UIq.Name = tostring(HTTP:GenerateGUID(false))
UIq.Parent = Core:WaitForChild("RobloxGui"):WaitForChild("Modules")
UIq.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
local ThunderScreen = Instance.new("ScreenGui")
local ThunderToggleUI = Instance.new("TextButton")
local ThunderCornerUI = Instance.new("UICorner")
local ThunderImageUI = Instance.new("ImageLabel")
local ThunderImageUI = Instance.new("ImageLabel")
ThunderScreen.Name = "ThunderScreen"
ThunderScreen.Parent = UIq;
ThunderScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
ThunderToggleUI.Name = "ThunderToggleUI"
ThunderToggleUI.Parent = ThunderScreen;
ThunderToggleUI.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ThunderToggleUI.BorderSizePixel = 0;
ThunderToggleUI.Position = UDim2.new(0, 0, 0.0952890813, 0)
ThunderToggleUI.Size = UDim2.new(0, 50, 0, 50)
ThunderToggleUI.Font = Enum.Font.SourceSans;
ThunderToggleUI.Text = ""
ThunderToggleUI.TextColor3 = Color3.fromRGB(0, 0, 0)
ThunderToggleUI.TextSize = 14.000;
ThunderToggleUI.Draggable = true;
ThunderToggleUI.MouseButton1Click:Connect(function()
	game.CoreGui:FindFirstChild("1xliiUI").Enabled = not game.CoreGui:FindFirstChild("1xliiUI").Enabled
  Open.Visible = false
end)
ThunderCornerUI.Name = "ThunderCornerUI"
ThunderCornerUI.Parent = ThunderToggleUI;
ThunderImageUI.Name = "MODILEMAGE"
ThunderImageUI.Parent = ThunderToggleUI;
ThunderImageUI.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
ThunderImageUI.BackgroundTransparency = 1.000;
ThunderImageUI.BorderSizePixel = 0;
ThunderImageUI.Position = UDim2.new(0.0, 0, 0.0, 0)
ThunderImageUI.Size = UDim2.new(0, 50, 0, 50)
ThunderImageUI.Image = "http://www.roblox.com/asset/?id=14288624550"

_G.Color1 = Color3.fromRGB(0,255,0)
do local GUI = game.CoreGui:FindFirstChild("1xliiUI");if GUI then GUI:Destroy();end;if _G.Color == nil then
_G.Color = Color3.fromRGB(85, 85, 85)
end
end

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local function MakeDraggable(topbarobject, object)
local Dragging = nil
local DragInput = nil
local DragStart = nil
local StartPosition = nil
local Core = game:GetService("CoreGui")
local Plrs = game:GetService("Players")
local Lplr = Plrs.LocalPlayer;
local UIS = game:GetService("UserInputService")
local TWS = game:GetService("TweenService")
local Run = game:GetService("RunService")
local Mouse = Lplr:GetMouse()
local VIM = game:GetService("VirtualInputManager")
local VU = game:GetService("VirtualUser")
local HTTP = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local RS = game:GetService("ReplicatedStorage")
local TS = game:GetService("TeleportService")
local SGui = game:GetService("StarterGui")

local function Update(input)
local Delta = input.Position - DragStart
local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
local Tween = TweenService:Create(object, TweenInfo.new(0.15), {
  Position = pos
})
Tween:Play()
end

topbarobject.InputBegan:Connect(
  function(input)
  if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
  Dragging = true
  DragStart = input.Position
  StartPosition = object.Position

  input.Changed:Connect(
    function()
    if input.UserInputState == Enum.UserInputState.End then
    Dragging = false
    end
    end
  )
  end
  end
)

topbarobject.InputChanged:Connect(
  function(input)
  if
    input.UserInputType == Enum.UserInputType.MouseMovement or
  input.UserInputType == Enum.UserInputType.Touch
  then
  DragInput = input
  end
  end
)

UserInputService.InputChanged:Connect(
  function(input)
  if input == DragInput and Dragging then
  Update(input)
  end
  end
)
end

local Update = {}

function Update:Window(logo,keybind)
local uihide = false
local abc = false
local logo = logo or 0
local currentpage = ""
local keybind = keybind or Enum.KeyCode.RightControl
local yoo = string.gsub(tostring(keybind),"Enum.KeyCode.","")

local SOMEXHUB = Instance.new("ScreenGui")
SOMEXHUB.Name = "1xliiUI"
SOMEXHUB.Parent = game.CoreGui
SOMEXHUB.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Main = Instance.new("Frame")
local WindowStrokemain = Instance.new("UIStroke")
Main.Name = "Main"
Main.Parent = SOMEXHUB
Main.ClipsDescendants = true
Main.AnchorPoint = Vector2.new(0.5,0.5)
Main.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Main.BackgroundTransparency = 0
Main.Position = UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0, 0, 0, 0)

WindowStrokemain.Name = "WindowStroke"
WindowStrokemain.Parent = Open
WindowStrokemain.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
WindowStrokemain.Color = Color3.fromRGB(255,255,255)
WindowStrokemain.LineJoinMode = Enum.LineJoinMode.Round
WindowStrokemain.Thickness = 1
WindowStrokemain.Transparency = 0
WindowStrokemain.Enabled = true
WindowStrokemain.Archivable = true

Main:TweenSize(UDim2.new(0, 530, 0, 325),"Out","Quad",0.4,true)

local MCNR = Instance.new("UICorner")
MCNR.Name = "MCNR"
MCNR.Parent = Main

local Top = Instance.new("Frame")
Top.Name = "Top"
Top.Parent = Main
Top.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
Top.Size = UDim2.new(0, 150, 0, 80)
Top.BorderSizePixel = 0
Top.Position = UDim2.new(0, 0, 0, 0)

local TdCNR = Instance.new("UICorner")
TdCNR.Name = "TCNR"
TdCNR.Parent = Top

local Logo = Instance.new("ImageLabel")
Logo.Name = "Logo"
Logo.Parent = Top
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1.000
Logo.Position = UDim2.new(0, 6, 0, 4.5)
Logo.Size = UDim2.new(0, 45, 0, 45)
Logo.Image = "rbxassetid://15808729999"

local Name = Instance.new("TextLabel")
Name.Name = "Name"
Name.Parent = Top
Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name.BackgroundTransparency = 1.000
Name.Position = UDim2.new(0, 56, 0, 7)
Name.Size = UDim2.new(0, 61, 0, 27)
Name.Font = Enum.Font.GothamSemibold
Name.RichText = true;
Name.Text = "ZREX" .. "<font color='rgb(255,255,255)'> HUB</font>"
Name.TextColor3 = Color3.fromRGB(190, 190, 190)
Name.TextSize = 15.000

local Hub = Instance.new("TextLabel")
Hub.Name = "Hub"
Hub.Parent = Top
Hub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hub.BackgroundTransparency = 1.000
Hub.Position = UDim2.new(0, 53, 0, 23)
Hub.Size = UDim2.new(0, 50, 0, 27)
Hub.Font = Enum.Font.GothamSemibold
Hub.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name;
Hub.TextColor3 = Color3.fromRGB(255, 255, 255)
Hub.TextTransparency = 0.5
Hub.TextSize = 7.5
Hub.TextXAlignment = Enum.TextXAlignment.Left

local BindButton = Instance.new("TextButton")
BindButton.Name = "BindButton"
BindButton.Parent = Top
BindButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BindButton.BackgroundTransparency = 1.000
BindButton.Position = UDim2.new(3.09, 0, 0, 0)
BindButton.Size = UDim2.new(0, 100, 0, 27)
BindButton.Font = Enum.Font.GothamSemibold
BindButton.Text = "X"
BindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BindButton.TextSize = 25.000
BindButton.Visible = true

BindButton.MouseButton1Click:Connect(function ()
  game.CoreGui:FindFirstChild("1xliiUI").Enabled = not game.CoreGui:FindFirstChild("1xliiUI").Enabled
  Open.Visible = true
  end)


local Tab = Instance.new("Frame")
local WindowStrokelol = Instance.new("UIStroke")
Tab.Name = "Tab"
Tab.Parent = Main
Tab.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
Tab.BackgroundTransparency = 0
Tab.Position = UDim2.new(0, 0, 0, 50)
Tab.Size = UDim2.new(0, 150, 0, 273)

local linetab = Instance.new("Frame")
linetab.Name = "linetab"
linetab.Parent = Tab
linetab.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
linetab.Position = UDim2.new(0, 20, 0, 4)
linetab.BackgroundTransparency = 0
--linetab.CornerRadius = UDim.new(0,5)
linetab.BorderSizePixel = 0
linetab.Size = UDim2.new(0, 112, 0, 2)

local lineshit = Instance.new("Frame")
lineshit.Name = "lineshit"
lineshit.Parent = Main
lineshit.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
lineshit.Position = UDim2.new(0, 150, 0, 10)
lineshit.BackgroundTransparency = 0
--lineshit.CornerRadius = UDim.new(0,5)
lineshit.BorderSizePixel = 0
lineshit.Size = UDim2.new(0, 2, 0, 305)

WindowStrokelol.Name = "WindowStroke"
WindowStrokelol.Parent = Tab
WindowStrokelol.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
WindowStrokelol.Color = Color3.fromRGB(255,255,255)
WindowStrokelol.LineJoinMode = Enum.LineJoinMode.Round
WindowStrokelol.Thickness = 0
WindowStrokelol.Transparency = 0
WindowStrokelol.Enabled = true
WindowStrokelol.Archivable = true

local TCNR = Instance.new("UICorner")
TCNR.Name = "TCNR"
TCNR.CornerRadius = UDim.new(0, 5)
TCNR.Parent = Tab

local ScrollTab = Instance.new("ScrollingFrame")
ScrollTab.Name = "ScrollTab"
ScrollTab.Parent = Tab
ScrollTab.Active = true
ScrollTab.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ScrollTab.BackgroundTransparency = 1
ScrollTab.Size = UDim2.new(0, 150, 0, 260)
ScrollTab.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollTab.ScrollBarThickness = 0

local PLL = Instance.new("UIListLayout")
PLL.Name = "PLL"
PLL.Parent = ScrollTab
PLL.SortOrder = Enum.SortOrder.LayoutOrder
PLL.Padding = UDim.new(0, 14)

local PPD = Instance.new("UIPadding")
PPD.Name = "PPD"
PPD.Parent = ScrollTab
PPD.PaddingLeft = UDim.new(0, 10)
PPD.PaddingTop = UDim.new(0, 10)

local Page = Instance.new("Frame")
local WindowStrokeshit = Instance.new("UIStroke")
Page.Name = "Page"
Page.Parent = Main
Page.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
Page.BackgroundTransparency = 1
Page.Position = UDim2.new(0.305426834, 0, 0.039900003, 0)
Page.Size = UDim2.new(0, 358, 0, 290)

WindowStrokeshit.Name = "WindowStroke"
WindowStrokeshit.Parent = shit
WindowStrokeshit.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
WindowStrokeshit.Color = Color3.fromRGB(255,255,255)
WindowStrokeshit.LineJoinMode = Enum.LineJoinMode.Round
WindowStrokeshit.Thickness = 0.3
WindowStrokeshit.Transparency = 0
WindowStrokeshit.Archivable = false
WindowStrokeshit.Enabled = true


local PCNR = Instance.new("UICorner")
PCNR.Name = "PCNR"
PCNR.Parent = Page

local MainPage = Instance.new("Frame")
MainPage.Name = "MainPage"
MainPage.Parent = Page
MainPage.ClipsDescendants = true
MainPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainPage.BackgroundTransparency = 1.000
MainPage.Size = UDim2.new(0, 490, 0, 365)

local PageList = Instance.new("Folder")
PageList.Name = "PageList"
PageList.Parent = MainPage

local UIPageLayout = Instance.new("UIPageLayout")

UIPageLayout.Parent = PageList
UIPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIPageLayout.EasingDirection = Enum.EasingDirection.InOut
UIPageLayout.EasingStyle = Enum.EasingStyle.Quad
UIPageLayout.FillDirection = Enum.FillDirection.Vertical
UIPageLayout.Padding = UDim.new(0, 15)
UIPageLayout.TweenTime = 0.400
UIPageLayout.GamepadInputEnabled = false
UIPageLayout.ScrollWheelInputEnabled = false
UIPageLayout.TouchInputEnabled = false

MakeDraggable(Top,Main)

UserInputService.InputBegan:Connect(function(input)
  if input.KeyCode == Enum.KeyCode[yoo] then
  if uihide == false then
  uihide = true
  Main:TweenSize(UDim2.new(0, 0, 0, 0),"In","Quad",0.4,true)
  else
    uihide = false
  Main:TweenSize(UDim2.new(0, 656, 0, 400),"Out","Quad",0.4,true)
  end
  end
  end)
local TCNRq = Instance.new("UICorner")
TCNRq.Name = "TCNR"
TCNRq.Parent = Tab1


local uitab = {}

function uitab:Tab(text, img)
local TabButton = Instance.new("TextButton")
local TabImage = Instance.new("ImageLabel")
local WindowStroke = Instance.new("UIStroke")

TabButton.Parent = ScrollTab
TabButton.Name = text.."Server"
TabButton.Text = text
TabButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TabButton.BackgroundTransparency = 1
TabButton.Size = UDim2.new(0, 134, 0, 30)
TabButton.Font = Enum.Font.GothamSemibold
TabButton.TextColor3 = Color3.fromRGB(225, 225, 225)
TabButton.TextSize = 12.000
TabButton.TextTransparency = 0

local MCNR1 = Instance.new("UICorner")
MCNR1.Name = "MCNR"
MCNR1.CornerRadius = UDim.new(0, 4)
MCNR1.Parent = TabButton


WindowStroke.Name = "WindowStroke"
WindowStroke.Parent = TabButton
WindowStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
WindowStroke.Color = Color3.fromRGB(255,255,255)
WindowStroke.LineJoinMode = Enum.LineJoinMode.Round
WindowStroke.Thickness = 0
WindowStroke.Transparency = 0
WindowStroke.Enabled = true
WindowStroke.Archivable = true

TabImage.Name = text or "TabImage"
TabImage.Parent = TabButton
TabImage.BackgroundColor3 = Color3.fromRGB("255,255,255")
TabImage.BackgroundTransparency = 1.000
TabImage.Position = UDim2.new(0, 3, 0, 5)
TabImage.Size = UDim2.new(0, 20, 0, 20)
TabImage.Image = img
TabImage.ImageColor3 = Color3.fromRGB(255,255,255)

local MainFramePage = Instance.new("ScrollingFrame")
MainFramePage.Name = text.."_Page"
MainFramePage.Parent = PageList
MainFramePage.Active = true
MainFramePage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFramePage.BackgroundTransparency = 1.000
MainFramePage.BorderSizePixel = 0
MainFramePage.Size = UDim2.new(0, 360, 0, 300)
MainFramePage.CanvasSize = UDim2.new(0, 0, 0, 0)
MainFramePage.ScrollBarThickness = 0

local UIPadding = Instance.new("UIPadding")
local UIListLayout = Instance.new("UIListLayout")

UIPadding.Parent = MainFramePage
UIPadding.PaddingLeft = UDim.new(0, 10)
UIPadding.PaddingTop = UDim.new(0, 10)

UIListLayout.Padding = UDim.new(0,10)
UIListLayout.Parent = MainFramePage
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder



local function animateButton(button, transparency)
    local textTransparency = 1

    local textTween = TweenService:Create(
        button,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {
            TextTransparency = 0
        }
    )

    local backgroundTween = TweenService:Create(
        button,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {
            BackgroundTransparency = transparency
        }
    )

    textTween:Play()
    backgroundTween:Play()
end

local function selectTab(TabButton)
    for i, v in next, ScrollTab:GetChildren() do
        if v:IsA("TextButton") then
            if v == TabButton then
                animateButton(v, 0)  -- Selected tab
            else
                animateButton(v, 1)  -- Unselected tabs
            end
        end
    end

    for i, v in next, PageList:GetChildren() do
        currentpage = string.gsub(TabButton.Name, "Server", "") .. "_Page"
        if v.Name == currentpage then
            UIPageLayout:JumpTo(v)
            -- Label1.Text = TabButton.Name
        end
    end
end

TabButton.MouseButton1Click:Connect(function()
    selectTab(TabButton)
end)

if abc == false then
    for i, v in next, ScrollTab:GetChildren() do
        if v:IsA("TextButton") then
            animateButton(v, 1)  -- Initially set unselected tabs to BackgroundTransparency 1
        end
    end

    animateButton(TabButton, 0)  -- Initially set selected tab

    UIPageLayout:JumpToIndex(1)
    -- Label1.Text = texttab
    abc = true
end

game:GetService("RunService").Stepped:Connect(function()
    pcall(function()
        MainFramePage.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 20)
        ScrollTab.CanvasSize = UDim2.new(0, 0, 0, PLL.AbsoluteContentSize.Y + 20)
    end)
end)






local main = {}
function main:Button(text,callback)
local Button = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextBtn = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local Black = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")

Button.Name = "Button"
Button.Parent = MainFramePage
Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Button.BackgroundTransparency = 0.5
Button.Size = UDim2.new(0, 342, 0, 31)

local hdjdjssl = Instance.new("UIStroke")
hdjdjssl.Name = "hdjdjssl"
hdjdjssl.Parent = Button;
hdjdjssl.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
hdjdjssl.Color = _G.Color;
hdjdjssl.LineJoinMode = Enum.LineJoinMode.Round;
hdjdjssl.Thickness = 1;
hdjdjssl.Transparency = 0;
hdjdjssl.Enabled = true;
hdjdjssl.Archivable = true;

UICorner.CornerRadius = UDim.new(0, 2)
UICorner.Parent = Button

TextBtn.Name = "TextBtn"
TextBtn.Parent = Button
TextBtn.BackgroundColor3 = _G.Color
TextBtn.BackgroundTransparency = 1
TextBtn.Position = UDim2.new(0, 1, 0, 1)
TextBtn.Size = UDim2.new(0, 111, 0, 29)
TextBtn.AutoButtonColor = false
TextBtn.Font = Enum.Font.GothamSemibold
TextBtn.Text = text
TextBtn.TextColor3 = Color3.fromRGB(225, 225, 225)
TextBtn.TextSize = 15.000
TextBtn.TextXAlignment = Enum.TextXAlignment.Center;

UICorner_2.CornerRadius = UDim.new(0, 2)
UICorner_2.Parent = TextBtn

Black.Name = "Black"
Black.Parent = Button
Black.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Black.BackgroundTransparency = 1.000
Black.BorderSizePixel = 0
Black.Position = UDim2.new(0, 1, 0, 1)
Black.Size = UDim2.new(0, 340, 0, 29)

UICorner_3.CornerRadius = UDim.new(0, 2)
UICorner_3.Parent = Black

TextBtn.MouseEnter:Connect(function()
  TweenService:Create(
    Black,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      BackgroundTransparency = 0.7
    }
  ):Play()
  end)
TextBtn.MouseLeave:Connect(function()
  TweenService:Create(
    Black,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      BackgroundTransparency = 1
    }
  ):Play()
  end)
TextBtn.MouseButton1Click:Connect(function()
  TextBtn.TextSize = 0
  TweenService:Create(
    TextBtn,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      TextSize = 15
    }
  ):Play()
  callback()
  end)
end
function main:Toggle(text,config,callback)
config = config or false
local toggled = config
local Toggle = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Button = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local Label = Instance.new("TextLabel")
local ToggleImage = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Circle = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")

Toggle.Name = "Toggle"
Toggle.Parent = MainFramePage
Toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Toggle.BackgroundTransparency = 0.5
Toggle.Size = UDim2.new(0, 342, 0, 31)

local hdhejd = Instance.new("UIStroke")
hdhejd.Name = "hdhejd"
hdhejd.Parent = Toggle;
hdhejd.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
hdhejd.Color = _G.Color;
hdhejd.LineJoinMode = Enum.LineJoinMode.Round;
hdhejd.Thickness = 1;
hdhejd.Transparency = 0;
hdhejd.Enabled = true;
hdhejd.Archivable = true;

UICorner.CornerRadius = UDim.new(0, 2)
UICorner.Parent = Toggle

Button.Name = "Button"
Button.Parent = Toggle
Button.BackgroundColor3 = _G.Color
Button.BackgroundTransparency = 1
Button.Position = UDim2.new(0, 1, 0, 1)
Button.Size = UDim2.new(0, 340, 0, 29)
Button.AutoButtonColor = false
Button.Font = Enum.Font.SourceSans
Button.Text = ""
Button.TextColor3 = Color3.fromRGB(0, 0, 0)
Button.TextSize = 11.000

UICorner_2.CornerRadius = UDim.new(0, 2)
UICorner_2.Parent = Button

Label.Name = "Label"
Label.Parent = Toggle
Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Label.BackgroundTransparency = 1.000
Label.Position = UDim2.new(0, 1, 0, 1)
Label.Size = UDim2.new(0, 180, 0, 29)
Label.Font = Enum.Font.GothamSemibold
Label.Text = "    "..text
Label.TextColor3 = Color3.fromRGB(225, 225, 225)
Label.TextSize = 12.000
Label.TextXAlignment = Enum.TextXAlignment.Left;

ToggleImage.Name = "ToggleImage"
ToggleImage.Parent = Toggle
ToggleImage.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
ToggleImage.Position = UDim2.new(0, 285, 0, 5)
ToggleImage.Size = UDim2.new(0, 45, 0, 20)

UICorner_3.CornerRadius = UDim.new(0, 10)
UICorner_3.Parent = ToggleImage

Circle.Name = "Circle"
Circle.Parent = ToggleImage
Circle.BackgroundColor3 = _G.Color
Circle.Position = UDim2.new(0, 2, 0, 2)
Circle.Size = UDim2.new(0, 16, 0, 16)

UICorner_4.CornerRadius = UDim.new(0, 10)
UICorner_4.Parent = Circle

Button.MouseButton1Click:Connect(function()
  if toggled == false then
  toggled = true
  Circle:TweenPosition(UDim2.new(0,27,0,2),"Out","Sine",0.2,true)
  TweenService:Create(
    Circle,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      BackgroundColor3 = _G.Color1
    }
  ):Play()
  else
    toggled = false
  Circle:TweenPosition(UDim2.new(0,2,0,2),"Out","Sine",0.2,true)
  TweenService:Create(
    Circle,
    TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
    {
      BackgroundColor3 = _G.Color}
  ):Play()
  end
  pcall(callback,toggled)
  end)

if config == true then
toggled = true
Circle:TweenPosition(UDim2.new(0,27,0,2),"Out","Sine",0.4,true)
TweenService:Create(
  Circle,
  TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
  {
    BackgroundColor3 = _G.Color1
  }
):Play()
pcall(callback,toggled)
end
end
			function main:Dropdown(Name, list, default, callback)
				local Dropfunc = {}
				local MainDropDown = Instance.new("Frame")
				local UICorner_7 = Instance.new("UICorner")
				local MainDropDown_2 = Instance.new("Frame")
				local UICorner_8 = Instance.new("UICorner")
				local v = Instance.new("TextButton")
				local Text_2 = Instance.new("TextLabel")
				local ImageButton = Instance.new("ImageButton")
				local Scroll_Items = Instance.new("ScrollingFrame")
				local UIListLayout_3 = Instance.new("UIListLayout")
				local UIPadding_3 = Instance.new("UIPadding")
				MainDropDown.Name = "MainDropDown"
				MainDropDown.Parent = MainFramePage;
				MainDropDown.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				MainDropDown.BackgroundTransparency = 0.700;
				MainDropDown.BorderSizePixel = 0;
				MainDropDown.ClipsDescendants = true;
				MainDropDown.Size = UDim2.new(0.975000024, 0, 0, 30)
				MainDropDown.ZIndex = 16;
				UICorner_7.CornerRadius = UDim.new(0, 4)
				UICorner_7.Parent = MainDropDown;
				MainDropDown_2.Name = "MainDropDown"
				MainDropDown_2.Parent = MainDropDown;
				MainDropDown_2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				MainDropDown_2.BackgroundTransparency = 0.700;
				MainDropDown_2.BorderSizePixel = 0;
				MainDropDown_2.ClipsDescendants = true;
				MainDropDown_2.Size = UDim2.new(1, 0, 0, 30)
				MainDropDown_2.ZIndex = 16;
				UICorner_8.CornerRadius = UDim.new(0, 4)
				UICorner_8.Parent = MainDropDown_2;
				v.Name = "v"
				v.Parent = MainDropDown_2;
				v.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				v.BackgroundTransparency = 1.000;
				v.BorderSizePixel = 0;
				v.Size = UDim2.new(1, 0, 1, 0)
				v.ZIndex = 16;
				v.AutoButtonColor = false;
				v.Font = Enum.Font.GothamBold;
				v.Text = ""
				v.TextColor3 = Color3.fromRGB(255, 255, 255)
				v.TextSize = 12.000;
				function getpro()
					if default then
						if table.find(list, default) then
							callback(default)
							return Name .. " : " .. default
						else
							return Name .. " : "
						end
					else
						return Name .. " : "
					end
				end;
				Text_2.Name = "Text"
				Text_2.Parent = MainDropDown_2;
				Text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.BackgroundTransparency = 1.000;
				Text_2.Position = UDim2.new(0, 10, 0, 10)
				Text_2.Size = UDim2.new(0, 62, 0, 12)
				Text_2.ZIndex = 16;
				Text_2.Font = Enum.Font.GothamBold;
				Text_2.Text = getpro()
				Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.TextSize = 12.000;
				Text_2.TextXAlignment = Enum.TextXAlignment.Left;
				ImageButton.Parent = MainDropDown_2;
				ImageButton.AnchorPoint = Vector2.new(0, 0.5)
				ImageButton.BackgroundTransparency = 1.000;
				ImageButton.Position = UDim2.new(1, -25, 0.5, 0)
				ImageButton.Size = UDim2.new(0, 12, 0, 12)
				ImageButton.ZIndex = 16;
				ImageButton.Image = "http://www.roblox.com/asset/?id=6282522798"
				Scroll_Items.Name = "Scroll_Items"
				Scroll_Items.Parent = MainDropDown;
				Scroll_Items.Active = true;
				Scroll_Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Scroll_Items.BackgroundTransparency = 1.000;
				Scroll_Items.BorderSizePixel = 0;
				Scroll_Items.Position = UDim2.new(0, 0, 0, 35)
				Scroll_Items.Size = UDim2.new(1, 0, 1, -35)
				Scroll_Items.ZIndex = 16;
				Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, 265)
				Scroll_Items.ScrollBarThickness = 0;
				UIListLayout_3.Parent = Scroll_Items;
				UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder;
				UIListLayout_3.Padding = UDim.new(0, 5)
			--[[	UIListLayout_2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
					Scroll_Items.CanvasSize = UDim2.new(1, 0, 0, UIListLayout_2.AbsoluteContentSize.Y + 40)
				end)]]
				UIPadding_3.Parent = Scroll_Items;
				UIPadding_3.PaddingLeft = UDim.new(0, 10)
				UIPadding_3.PaddingTop = UDim.new(0, 5)
				function Dropfunc:TogglePanel(state)
					TweenService:Create(MainDropDown, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
						Size = state and UDim2.new(0.975000024, 0, 0, 299) or UDim2.new(0.975000024, 0, 0, 30)
					}):Play()
					TweenService:Create(ImageButton, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
						Rotation = state and 180 or 0
					}):Play()
				end;
				local Tof = false;
				ImageButton.MouseButton1Click:Connect(function()
					Tof = not Tof;
					Dropfunc:TogglePanel(Tof)
				end)
				v.MouseButton1Click:Connect(function()
					Tof = not Tof;
					Dropfunc:TogglePanel(Tof)
				end)
				function Dropfunc:Clear()
					for i, v in next, Scroll_Items:GetChildren() do
						if v:IsA("TextButton") then
							v:Destroy()
						end
					end
				end;
				function Dropfunc:Add(Text)
					local _5 = Instance.new("TextButton")
					local UICorner_9 = Instance.new("UICorner")
					_5.Name = Text;
					_5.Parent = Scroll_Items;
					_5.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
					_5.BorderSizePixel = 0;
					_5.ClipsDescendants = true;
					_5.Size = UDim2.new(1, -10, 0, 20)
					_5.ZIndex = 17;
					_5.AutoButtonColor = false;
					_5.Font = Enum.Font.GothamBold;
					_5.Text = Text;
					_5.TextColor3 = Color3.fromRGB(255, 255, 255)
					_5.TextSize = 12.000;
					UICorner_9.CornerRadius = UDim.new(0, 4)
					UICorner_9.Parent = _5;
					_5.MouseButton1Click:Connect(function()
						if _x == nil then
							Tof = false;
							Dropfunc:TogglePanel(Tof)
							callback(Text)
							Text_2.Text = Name .. " : " .. Text;
							_x = nil
						end
					end)
				end;
				for i, v in next, list do
					Dropfunc:Add(v)
				end;
				return Dropfunc
			end;

function main:Slider(text,min,max,set,callback)
local Slider = Instance.new("Frame")
local slidercorner = Instance.new("UICorner")
local sliderr = Instance.new("Frame")
local sliderrcorner = Instance.new("UICorner")
local SliderLabel = Instance.new("TextLabel")
local HAHA = Instance.new("Frame")
local AHEHE = Instance.new("TextButton")
local bar = Instance.new("Frame")
local bar1 = Instance.new("Frame")
local bar1corner = Instance.new("UICorner")
local barcorner = Instance.new("UICorner")
local circlebar = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local slidervalue = Instance.new("Frame")
local valuecorner = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local UICorner_2 = Instance.new("UICorner")

Slider.Name = "Slider"
Slider.Parent = MainFramePage
Slider.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Slider.BackgroundTransparency = 0.5
Slider.Size = UDim2.new(0, 342, 0, 51)

local jdkkdkekke = Instance.new("UIStroke")
jdkkdkekke.Name = "jdkkdkekke"
jdkkdkekke.Parent = Slider;
jdkkdkekke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
jdkkdkekke.Color = _G.Color;
jdkkdkekke.LineJoinMode = Enum.LineJoinMode.Round;
jdkkdkekke.Thickness = 1;
jdkkdkekke.Transparency = 0;
jdkkdkekke.Enabled = true;
jdkkdkekke.Archivable = true;

slidercorner.CornerRadius = UDim.new(0, 2)
slidercorner.Name = "slidercorner"
slidercorner.Parent = Slider

sliderr.Name = "sliderr"
sliderr.Parent = Slider
sliderr.BackgroundColor3 = _G.Color
sliderr.BackgroundTransparency = 1
sliderr.Position = UDim2.new(0, 1, 0, 1)
sliderr.Size = UDim2.new(0, 340, 0, 49)

sliderrcorner.CornerRadius = UDim.new(0, 2)
sliderrcorner.Name = "sliderrcorner"
sliderrcorner.Parent = sliderr

SliderLabel.Name = "SliderLabel"
SliderLabel.Parent = sliderr
SliderLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderLabel.BackgroundTransparency = 1.000
SliderLabel.Position = UDim2.new(0, 15, 0, 0)
SliderLabel.Size = UDim2.new(0, 180, 0, 26)
SliderLabel.Font = Enum.Font.GothamSemibold
SliderLabel.Text = text
SliderLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
SliderLabel.TextSize = 16.000
SliderLabel.TextTransparency = 0
SliderLabel.TextXAlignment = Enum.TextXAlignment.Left

HAHA.Name = "HAHA"
HAHA.Parent = sliderr
HAHA.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HAHA.BackgroundTransparency = 1.000
HAHA.Size = UDim2.new(0, 340, 0, 29)

AHEHE.Name = "AHEHE"
AHEHE.Parent = sliderr
AHEHE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AHEHE.BackgroundTransparency = 1.000
AHEHE.Position = UDim2.new(0, 10, 0, 35)
AHEHE.Size = UDim2.new(0, 340, 0, 5)
AHEHE.Font = Enum.Font.SourceSans
AHEHE.Text = ""
AHEHE.TextColor3 = Color3.fromRGB(0, 0, 0)
AHEHE.TextSize = 14.000

bar.Name = "bar"
bar.Parent = AHEHE
bar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
bar.Size = UDim2.new(0, 320, 0, 5)

bar1.Name = "bar1"
bar1.Parent = bar
bar1.BackgroundColor3 = _G.Color
bar1.BackgroundTransparency = 0
bar1.Size = UDim2.new(set/max, 0, 0, 5)

bar1corner.CornerRadius = UDim.new(0, 2)
bar1corner.Name = "bar1corner"
bar1corner.Parent = bar1

barcorner.CornerRadius = UDim.new(0, 2)
barcorner.Name = "barcorner"
barcorner.Parent = bar

circlebar.Name = "circlebar"
circlebar.Parent = bar1
circlebar.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
circlebar.Position = UDim2.new(1, -2, 0, -3)
circlebar.Size = UDim2.new(0, 10, 0, 10)

UICorner.CornerRadius = UDim.new(0, 100)
UICorner.Parent = circlebar

slidervalue.Name = "slidervalue"
slidervalue.Parent = sliderr
slidervalue.BackgroundColor3 = _G.Color
slidervalue.BackgroundTransparency = 0
slidervalue.Position = UDim2.new(0, 273, 0, 5)
slidervalue.Size = UDim2.new(0, 65, 0, 18)

valuecorner.CornerRadius = UDim.new(0, 2)
valuecorner.Name = "valuecorner"
valuecorner.Parent = slidervalue

TextBox.Parent = slidervalue
TextBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TextBox.Position = UDim2.new(0, 1, 0, 1)
TextBox.Size = UDim2.new(0, 63, 0, 16)
TextBox.Font = Enum.Font.GothamSemibold
TextBox.TextColor3 = Color3.fromRGB(225, 225, 225)
TextBox.TextSize = 9.000
TextBox.Text = set
TextBox.TextTransparency = 0

UICorner_2.CornerRadius = UDim.new(0, 2)
UICorner_2.Parent = TextBox

local mouse = game.Players.LocalPlayer:GetMouse()
local uis = game:GetService("UserInputService")

if Value == nil then
Value = set
pcall(function()
  callback(Value)
  end)
end

AHEHE.MouseButton1Down:Connect(function()
  Value = math.floor((((tonumber(max) - tonumber(min)) / 320) * bar1.AbsoluteSize.X) + tonumber(min)) or 0
  pcall(function()
    callback(Value)
    end)
  bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 320), 0, 5)
  circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 320), 0, -3)
  moveconnection = mouse.Move:Connect(function()
    TextBox.Text = Value
    Value = math.floor((((tonumber(max) - tonumber(min)) / 320) * bar1.AbsoluteSize.X) + tonumber(min))
    pcall(function()
      callback(Value)
      end)
    bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 320), 0, 5)
    circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 320), 0, -3)
    end)
  releaseconnection = uis.InputEnded:Connect(function(Mouse)
    if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
    Value = math.floor((((tonumber(max) - tonumber(min)) / 320) * bar1.AbsoluteSize.X) + tonumber(min))
    pcall(function()
      callback(Value)
      end)
    bar1.Size = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X, 0, 320), 0, 5)
    circlebar.Position = UDim2.new(0, math.clamp(mouse.X - bar1.AbsolutePosition.X - 2, 0, 320), 0, -3)
    moveconnection:Disconnect()
    releaseconnection:Disconnect()
    end
    end)
  end)
releaseconnection = uis.InputEnded:Connect(function(Mouse)
  if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
  Value = math.floor((((tonumber(max) - tonumber(min)) / 320) * bar1.AbsoluteSize.X) + tonumber(min))
  TextBox.Text = Value
  end
  end)

TextBox.FocusLost:Connect(function()
  if tonumber(TextBox.Text) > max then
  TextBox.Text = max
  end
  bar1.Size = UDim2.new((TextBox.Text or 0) / max, 0, 0, 5)
  circlebar.Position = UDim2.new(1, -2, 0, -3)
  TextBox.Text = tostring(TextBox.Text and math.floor((TextBox.Text / max) * (max - min) + min))
  pcall(callback, TextBox.Text)
  end)
end

function main:Textbox(text,disappear,callback)
local Textbox = Instance.new("Frame")
local TextboxCorner = Instance.new("UICorner")
local Textboxx = Instance.new("Frame")
local TextboxxCorner = Instance.new("UICorner")
local TextboxLabel = Instance.new("TextLabel")
local txtbtn = Instance.new("TextButton")
local RealTextbox = Instance.new("TextBox")
local UICorner = Instance.new("UICorner")

Textbox.Name = "Textbox"
Textbox.Parent = MainFramePage
Textbox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Textbox.BackgroundTransparency = 0.5
Textbox.Size = UDim2.new(0, 342, 0, 31)


local btnstrokee = Instance.new("UIStroke")
btnstrokee.Name = "btnstrokee"
btnstrokee.Parent = Textbox;
btnstrokee.ApplyStrokeMode = Enum.ApplyStrokeMode.Border;
btnstrokee.Color = _G.Color;
btnstrokee.LineJoinMode = Enum.LineJoinMode.Round;
btnstrokee.Thickness = 1;
btnstrokee.Transparency = 0;
btnstrokee.Enabled = true;
btnstrokee.Archivable = true;

TextboxCorner.CornerRadius = UDim.new(0, 2)
TextboxCorner.Name = "TextboxCorner"
TextboxCorner.Parent = Textbox

Textboxx.Name = "Textboxx"
Textboxx.Parent = Textbox
Textboxx.BackgroundColor3 = _G.Color
Textboxx.BackgroundTransparency = 1
Textboxx.Position = UDim2.new(0, 1, 0, 1)
Textboxx.Size = UDim2.new(0, 340, 0, 29)

TextboxxCorner.CornerRadius = UDim.new(0, 2)
TextboxxCorner.Name = "TextboxxCorner"
TextboxxCorner.Parent = Textboxx

TextboxLabel.Name = "TextboxLabel"
TextboxLabel.Parent = Textbox
TextboxLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextboxLabel.BackgroundTransparency = 1.000
TextboxLabel.Position = UDim2.new(0, 15, 0, 0)
TextboxLabel.Text = text
TextboxLabel.Size = UDim2.new(0, 145, 0, 31)
TextboxLabel.Font = Enum.Font.GothamSemibold
TextboxLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
TextboxLabel.TextSize = 16.000
TextboxLabel.TextTransparency = 0
TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left

txtbtn.Name = "txtbtn"
txtbtn.Parent = Textbox
txtbtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
txtbtn.BackgroundTransparency = 1.000
txtbtn.Position = UDim2.new(0, 1, 0, 1)
txtbtn.Size = UDim2.new(0, 340, 0, 29)
txtbtn.Font = Enum.Font.SourceSans
txtbtn.Text = ""
txtbtn.TextColor3 = Color3.fromRGB(0, 0, 0)
txtbtn.TextSize = 14.000

RealTextbox.Name = "RealTextbox"
RealTextbox.Parent = Textbox
RealTextbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
RealTextbox.BackgroundTransparency = 0
RealTextbox.Position = UDim2.new(0, 240, 0, 4)
RealTextbox.Size = UDim2.new(0, 100, 0, 24)
RealTextbox.Font = Enum.Font.GothamSemibold
RealTextbox.Text = ""
RealTextbox.TextColor3 = Color3.fromRGB(225, 225, 225)
RealTextbox.TextSize = 11.000
RealTextbox.TextTransparency = 0

RealTextbox.FocusLost:Connect(function()
  callback(RealTextbox.Text)
  if disappear then
  RealTextbox.Text = ""
  end
  end)

UICorner.CornerRadius = UDim.new(0, 2)
UICorner.Parent = RealTextbox
end
function main:Label(text)
local Label = Instance.new("TextLabel")
local PaddingLabel = Instance.new("UIPadding")
local labelfunc = {}
Label.Name = "Label"
Label.Parent = MainFramePage;
Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Label.BackgroundTransparency = 1.000;
Label.Size = UDim2.new(0, 200, 0, 20)
Label.Font = Enum.Font.GothamBold;
Label.TextColor3 = Color3.fromRGB(225, 225, 225)
Label.TextTransparency = 0.5;
Label.TextSize = 12.000;
Label.Text = text;
Label.TextXAlignment = Enum.TextXAlignment.Left;
PaddingLabel.PaddingLeft = UDim.new(0, 10)
PaddingLabel.Parent = Label;
PaddingLabel.Name = "PaddingLabel"
function labelfunc:Set(newtext)
Label.Text = newtext
end;
return labelfunc
end;

function main:Label1(text)
local Label1 = Instance.new("TextButton")
local LabelTitle = Instance.new("TextLabel")
local label1func = {}

Label1.Name = "Label1"
Label1.Parent = MainFramePage
Label1.BackgroundColor3 = Color3.fromRGB(25,25,25)
Label1.BorderSizePixel = 0
Label1.Position = UDim2.new(0.261979163, 0, 0.190789461, 0)
Label1.Size = UDim2.new(0, 342, 0, 20)
Label1.BackgroundTransparency = 1
Label1.Font = Enum.Font.SciFi
Label1.Text = ""
Label1.TextColor3 = Color3.fromRGB(255, 255, 255)
Label1.TextSize = 14.000

LabelTitle.Name = "LabelTitle"
LabelTitle.Parent = Label
LabelTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LabelTitle.BackgroundTransparency = 1.000
LabelTitle.Position = UDim2.new(0, 0, 0, 0)
LabelTitle.Size = UDim2.new(0, 200, 0, 30)
LabelTitle.Font = Enum.Font.SciFi
LabelTitle.Text = text
LabelTitle.TextColor3 = Color3.fromRGB(127, 131, 137)
LabelTitle.TextSize = 14.000
LabelTitle.TextXAlignment = Enum.TextXAlignment.Left
function label1func:Refresh(tochange)
Label1.Text = tochange
end

return label1func
end

function main:Seperator(text)
local Seperator = Instance.new("Frame")
local Sep1 = Instance.new("Frame")
local Sep2 = Instance.new("TextLabel")
local Sep3 = Instance.new("Frame")

Seperator.Name = "Seperator"
Seperator.Parent = MainFramePage
Seperator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Seperator.BackgroundTransparency = 1.000
Seperator.Size = UDim2.new(0, 300, 0, 20)

Sep1.Name = "Sep1"
Sep1.Parent = Seperator
Sep1.BackgroundColor3 = _G.Color
Sep1.BorderSizePixel = 0
Sep1.Position = UDim2.new(0, 0, 0, 10)
Sep1.Size = UDim2.new(0, 80, 0, 1)

Sep2.Name = "Sep2"
Sep2.Parent = Seperator
Sep2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Sep2.BackgroundTransparency = 1.000
Sep2.Position = UDim2.new(0, 128, 0, 0)
Sep2.Size = UDim2.new(0, 90, 0, 20)
Sep2.Font = Enum.Font.GothamSemibold
Sep2.Text = text
Sep2.TextColor3 = Color3.fromRGB(255, 255, 255)
Sep2.TextSize = 20.000

Sep3.Name = "Sep3"
Sep3.Parent = Seperator
Sep3.BackgroundColor3 = _G.Color
Sep3.BorderSizePixel = 0
Sep3.Position = UDim2.new(0, 260, 0, 10)
Sep3.Size = UDim2.new(0, 80, 0, 1)
end

function main:Line()
local Linee = Instance.new("Frame")
local Line = Instance.new("Frame")

Linee.Name = "Linee"
Linee.Parent = MainFramePage
Linee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Linee.BackgroundTransparency = 1.000
Linee.Position = UDim2.new(0, 0, 0.119999997, 0)
Linee.Size = UDim2.new(0, 340, 0, 20)

Line.Name = "Line"
Line.Parent = Linee
Line.BackgroundColor3 = _G.Color
Line.BorderSizePixel = 0
Line.Position = UDim2.new(0, 0, 0, 10)
Line.Size = UDim2.new(0, 340, 0, 1)
end
return main
end
return uitab
end
return Update

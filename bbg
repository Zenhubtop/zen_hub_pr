
local LocalPlayer = game:GetService('Players').LocalPlayer;
local TextService = game:GetService('TextService')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local HttpService = game:GetService('HttpService')

local Core = game:GetService("CoreGui")
local Plrs = game:GetService("Players")
local Lplr = Plrs.LocalPlayer;
local UIS = game:GetService("UserInputService")
local TWS = game:GetService("TweenService")
local Run = game:GetService("RunService")
local Mouse = Lplr:GetMouse()
local VIM = game:GetService("VirtualInputManager")
local VU = game:GetService("VirtualUser")
local HTTP = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local RS = game:GetService("ReplicatedStorage")
local TS = game:GetService("TeleportService")
local SGui = game:GetService("StarterGui")

local function GetChar()
	return Lplr.Character or Lplr.CharacterAdded:Wait()
end;
local function GetHum()
	return GetChar():FindFirstChild("Humanoid")
end;
local function GetRoot()
	return GetChar():FindFirstChild("HumanoidRootPart")
end;
local function Notify(title, text, Time)
	SGui:SetCore("SendNotification", {
		Title = title,
		Text = text,
		Duration = Time
	})
end;
--------------------------------------------------------------------------------------
local pairs = pairs;
local ipairs = ipairs;
--------------------------------------------------------------------------------------

local LocalPlayer = game:GetService('Players').LocalPlayer
local TextService = game:GetService('TextService')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local HttpService = game:GetService('HttpService')

local Core = game:GetService("CoreGui")
local Plrs = game:GetService("Players")
local Lplr = Plrs.LocalPlayer
local UIS = game:GetService("UserInputService")
local TWS = game:GetService("TweenService")
local Run = game:GetService("RunService")
local Mouse = Lplr:GetMouse()
local VIM = game:GetService("VirtualInputManager")
local VU = game:GetService("VirtualUser")
local HTTP = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local RS = game:GetService("ReplicatedStorage")
local TS = game:GetService("TeleportService")
local SGui = game:GetService("StarterGui")

local function GetChar()
	return Lplr.Character or Lplr.CharacterAdded:Wait()
end

local function GetHum()
	return GetChar():FindFirstChild("Humanoid")
end

local function GetRoot()
	return GetChar():FindFirstChild("HumanoidRootPart")
end

local function Notify(title, text, Time)
	SGui:SetCore("SendNotification", {
		Title = title,
		Text = text,
		Duration = Time
	})
end
local executorName = identifyexecutor()

--------------------------------------------------------------------------------------
local pairs = pairs;
local ipairs = ipairs;
--------------------------------------------------------------------------------------

local LocalPlayer = game:GetService('Players').LocalPlayer
local TextService = game:GetService('TextService')
local TweenService = game:GetService('TweenService')
local UserInputService = game:GetService('UserInputService')
local HttpService = game:GetService('HttpService')

local Core = game:GetService("CoreGui")
local Plrs = game:GetService("Players")
local Lplr = Plrs.LocalPlayer
local UIS = game:GetService("UserInputService")
local TWS = game:GetService("TweenService")
local Run = game:GetService("RunService")
local Mouse = Lplr:GetMouse()
local VIM = game:GetService("VirtualInputManager")
local VU = game:GetService("VirtualUser")
local HTTP = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local RS = game:GetService("ReplicatedStorage")
local TS = game:GetService("TeleportService")
local SGui = game:GetService("StarterGui")

local function GetChar()
	return Lplr.Character or Lplr.CharacterAdded:Wait()
end

local function GetHum()
	return GetChar():FindFirstChild("Humanoid")
end

local function GetRoot()
	return GetChar():FindFirstChild("HumanoidRootPart")
end

local function Notify(title, text, Time)
	SGui:SetCore("SendNotification", {
		Title = title,
		Text = text,
		Duration = Time
	})
end

--------------------------------------------------------------------------------------
local UIConfig = {
	Bind = Enum.KeyCode.RightControl
}

local UserInputService = game:GetService("UserInputService")

local Alc = {
	Config = {
		['MainColor'] = Color3.fromRGB(221,160,221),
		['DropColor'] = Color3.fromRGB(121,111,121),
		['UI Size'] = UDim2.new(0.1, 480, 0.1, 280)
	},
	CoreGui = game:FindFirstChild('CoreGui') or game.Players.LocalPlayer.PlayerGui,
	Windows = {},
}


local ProtectGui = protectgui or (syn and syn.protect_gui) or (function() end);

local function cretate_button(asd)
	local button=Instance.new('TextButton')
	button.Size=UDim2.new(1,0,1,0)
	button.BackgroundTransparency=1
	button.TextTransparency=1
	button.Text=""
	button.Parent=asd
	button.ZIndex=5000
	return button
end

function Alc:GetTextSize(TextLabel)
	return TextService:GetTextSize(TextLabel.Text,TextLabel.TextSize,TextLabel.Font,Vector2.new(math.huge,math.huge))
end

--[[function Alc:GetId(Original)
	if Original:find('rbxassetid://') or Original:find('=') then
		return Original
	end

	if Alc['Icons']['icons'][Original] then
		return Alc['Icons']['icons'][Original]
	end

	return "rbxassetid://"..Original
end]]

local function scrolling_connectY(scrollframe)
    task.spawn(function()
        local address = 1 -- Padding or additional space to add
        local UIListLayout = scrollframe:WaitForChild('UIListLayout', 9999999)
        
        scrollframe.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + address)
        
        UIListLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
            scrollframe.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + address)
        end)
    end)
end

local function scrolling_connectX(scrollframe)
    task.spawn(function()
        local address = 1 -- Padding or additional space to add
        local UIListLayout = scrollframe:WaitForChild('UIListLayout', 9999999)
        
        scrollframe.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X + address, 0, 0)
        
        UIListLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
            scrollframe.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X + address, 0, 0)
        end)
    end)
end

function Alc:NewWindow(WindowName,WindowDescription,WindowLogo)
	WindowName = WindowName or "...";
	WindowDescription = WindowDescription or "..."
	WindowLogo = WindowLogo or '0'

	local WindowAlc = {
		Toggle = Enum.KeyCode.LeftControl,
		Tabs = {},
		TabSelect = 1
	}

	local Main = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local DropShadow = Instance.new("ImageLabel")
	local Topbar = Instance.new("Frame")
	local HubLogo = Instance.new("ImageLabel")
	local UICorner_2 = Instance.new("UICorner")
	local TextTitle = Instance.new("TextLabel")
	local TextDescription = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local UIGradient1 = Instance.new("UIGradient")
	local MenuFrames = Instance.new("Frame")
	local MenuScroll = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")
	local CloseUI = Instance.new("Frame")
	local HubLogo_2 = Instance.new("ImageLabel")
	local UICorner_3 = Instance.new("UICorner")
	local UICorner_4 = Instance.new("UICorner")
	local Frame1 = Instance.new("Frame")
	local UICorner8 = Instance.new("UICorner")

	Main.Name = "Main"
	Main.Parent = Alc.CoreGui
	Main.ResetOnSpawn = false
	Main.IgnoreGuiInset = true
	Main.ZIndexBehavior = Enum.ZIndexBehavior.Global
	ProtectGui(Main)
	Frame.Parent = Main
	Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Frame.BackgroundTransparency = 0
	Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
	Frame.Size = UDim2.fromScale(0,0)
	Frame.SizeConstraint = Enum.SizeConstraint.RelativeYY
	Frame.ClipsDescendants = true

	TweenService:Create(Frame,TweenInfo.new(1.5),{Size = Alc.Config["UI Size"]}):Play()
UICorner.CornerRadius = UDim.new(0, 3)
	UICorner.Parent = Frame

	DropShadow.Name = "DropShadow"
	DropShadow.Parent = Frame
	DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	DropShadow.BackgroundTransparency = 1.000
	DropShadow.BorderSizePixel = 0
	DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	DropShadow.Size = UDim2.new(1, 47, 1, 47)
	DropShadow.ZIndex = 0
	DropShadow.Image = "rbxassetid://6015897843"
	DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	DropShadow.ImageTransparency = 0.500
	DropShadow.ScaleType = Enum.ScaleType.Slice
	DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)
	DropShadow.Rotation = 0.01

	Topbar.Name = "Topbar"
	Topbar.Parent = Frame
	Topbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Topbar.BackgroundTransparency = 1.000
	Topbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Topbar.BorderSizePixel = 0
	Topbar.Size = UDim2.new(1, 0, 0.09, 0)
	Topbar.ZIndex = 2

	-- Bottom Frame Bar
    Frame1.Parent = Frame
    Frame1.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame1.BackgroundColor3 = Color3.fromRGB(221,160,221)
	Frame1.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame1.BorderSizePixel = 0
	Frame1.BackgroundTransparency = 0.5
    Frame1.Position = UDim2.new(0.5, 0, 0.1, 0)
    Frame1.Size = UDim2.new(0.95, 0, 0.005, 0)
    Frame1.ZIndex = 5

	local uiGradient = Instance.new("UIGradient")
uiGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), -- Black on the left
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(221, 160, 221)), -- Thistle in the center
    ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0)) -- Black on the right
})
uiGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.5), -- Left side is semi-transparent
    NumberSequenceKeypoint.new(0.6, 0), -- Center is opaque
    NumberSequenceKeypoint.new(1, 0.5) -- Right side is semi-transparent
})
uiGradient.Parent = Frame1

UICorner8.CornerRadius = UDim.new(0, 3)
		UICorner8.Parent = Frame1

	HubLogo.Name = "HubLogo"
	HubLogo.Parent = Topbar
	HubLogo.AnchorPoint = Vector2.new(0.5, 0.5)
	HubLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	HubLogo.BackgroundTransparency = 1.000
	HubLogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
	HubLogo.BorderSizePixel = 0
	HubLogo.Position = UDim2.new(0.0450000018, 0, 0.6, 0)
	HubLogo.Size = UDim2.new(0.899999976, 0, 0.899999976, 0)
	HubLogo.SizeConstraint = Enum.SizeConstraint.RelativeYY
	HubLogo.ZIndex = 3
	HubLogo.Image = WindowLogo

	UICorner_2.Parent = HubLogo

	TextTitle.Name = "TextTitle"
	TextTitle.Parent = Topbar
	TextTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextTitle.BackgroundTransparency = 1.000
	TextTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextTitle.BorderSizePixel = 0
	TextTitle.Position = UDim2.new(0.103366353, 0, 0.2099998972, 0)
	TextTitle.Size = UDim2.new(0.896555603, 0, 0.433997005, 0)
	TextTitle.ZIndex = 3
	TextTitle.Font = Enum.Font.GothamBold
TextTitle.Text = "ZEN HUB |" .. "<font size='10'>" .. "<font color='rgb(221,160,221)'>" .. " https://discord.gg/zen-hub" .. "</font></font>"
	TextTitle.RichText = true;
	TextTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextTitle.TextScaled = true
	TextTitle.TextSize = 14.000
	TextTitle.TextWrapped = true
	TextTitle.TextXAlignment = Enum.TextXAlignment.Left

	TextDescription.Name = "TextDescription"
	TextDescription.Parent = Topbar
	TextDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextDescription.BackgroundTransparency = 1.000
	TextDescription.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextDescription.BorderSizePixel = 0
	TextDescription.Position = UDim2.new(0.103366353, 0, 0.65399694, 0)
	TextDescription.Size = UDim2.new(0, 80, 0.300000012, 0)
	TextDescription.ZIndex = 3
	TextDescription.Font = Enum.Font.GothamBold
	TextDescription.Text = WindowDescription
	TextDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextDescription.TextScaled = false
	TextDescription.TextSize = 10.000
	TextDescription.TextWrapped = true
	TextDescription.TextXAlignment = Enum.TextXAlignment.Left

    local TWS = game:GetService("TweenService")

    -- Exit Button
local ExitButton = Instance.new("ImageButton")
ExitButton.Name = "Exit"
ExitButton.Parent = Topbar
ExitButton.AnchorPoint = Vector2.new(1, 0)
ExitButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ExitButton.BackgroundTransparency = 1
ExitButton.BorderSizePixel = 0
ExitButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ExitButton.Position = UDim2.new(1, -8, 0, 10)
ExitButton.Size = UDim2.new(0, 20, 0, 20)
ExitButton.Image = [[rbxassetid://10747384394]]

-- Minimize Button
local MinimizeButton = Instance.new("ImageButton")
MinimizeButton.Name = "Minimize"
MinimizeButton.Parent = Topbar
MinimizeButton.AnchorPoint = Vector2.new(1, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.BorderSizePixel = 0
MinimizeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.Position = UDim2.new(1, -33, 0, 10)
MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
MinimizeButton.Image = [[rbxassetid://10734896206]]


MinimizeButton.MouseButton1Click:Connect(function()
end)

-- Minimize Button Functionality (Fade and Resize Frame)
ExitButton.MouseButton1Click:Connect(function()
	Main:Destroy()
	Frame:Destroy()
	Frames:Destroy()
	Toggle:Destroy()
end)



	--[[UPDATE TEXT]]
	local function UpdateDescTextSize()
		local size = Alc:GetTextSize(TextDescription)
		TweenService:Create(TextDescription,TweenInfo.new(0.5),{Size = UDim2.new(0,size.X,0.3,0)}):Play()
	end

	UpdateDescTextSize()

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Alc.Config.MainColor), ColorSequenceKeypoint.new(1.00, Alc.Config.DropColor)}
	UIGradient.Parent = TextDescription

	MenuFrames.Name = "MenuFrames"
	MenuFrames.Parent = Frame
	MenuFrames.AnchorPoint = Vector2.new(0.5, 0)
	MenuFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	MenuFrames.BackgroundTransparency = 1.000
	MenuFrames.BorderColor3 = Color3.fromRGB(0, 0, 0)
	MenuFrames.BorderSizePixel = 0
	MenuFrames.Position = UDim2.new(0.5, 0, 0.075000003, 0)
	MenuFrames.Size = UDim2.new(0.949999988, 0, 0.0799999982, 0)
	MenuFrames.ZIndex = 2

	MenuScroll.Name = "MenuScroll"
	MenuScroll.Parent = MenuFrames
	MenuScroll.Active = true
	MenuScroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	MenuScroll.BackgroundTransparency = 1.000
	MenuScroll.BorderColor3 = Color3.fromRGB(0, 0, 0)
	MenuScroll.BorderSizePixel = 0
	MenuScroll.Size = UDim2.new(1, 0, 1, 0)
	MenuScroll.ZIndex = 3
	MenuScroll.CanvasSize = UDim2.new(2, 0, 0, 0)
	MenuScroll.ScrollBarThickness = 0
	MenuScroll.TopImage = ""

	scrolling_connectX((MenuScroll))

	UIListLayout.Parent = MenuScroll
	UIListLayout.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	UIListLayout.Padding = UDim.new(0,8)
	CloseUI.Name = "CloseUI"
	CloseUI.Parent = Frame
	CloseUI.AnchorPoint = Vector2.new(0.5, 0.5)
	CloseUI.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	CloseUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
	CloseUI.BorderSizePixel = 0
	CloseUI.Position = UDim2.new(0.5, 0, 0.5, 0)
	CloseUI.Visible = false
	CloseUI.ZIndex = 45
	CloseUI.Size = UDim2.fromScale(1,1)

	TweenService:Create(CloseUI,TweenInfo.new(2,Enum.EasingStyle.Quint,Enum.EasingDirection.In),{Size = UDim2.fromScale(0,0)}):Play()

	HubLogo_2.Name = "HubLogo"
	HubLogo_2.Parent = CloseUI
	HubLogo_2.AnchorPoint = Vector2.new(0.5, 0.5)
	HubLogo_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	HubLogo_2.BackgroundTransparency = 1.000
	HubLogo_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	HubLogo_2.BorderSizePixel = 0
	HubLogo_2.Position = UDim2.new(0.5, 0, 0.5, 0)
	HubLogo_2.Size = UDim2.new(0.25, 0, 0.25, 0)
	HubLogo_2.SizeConstraint = Enum.SizeConstraint.RelativeYY
	HubLogo_2.ZIndex = 55
	HubLogo_2.Image = WindowLogo

	UICorner_3.Parent = HubLogo_2

	UICorner_4.Parent = CloseUI

    local UIStroke = Instance.new("UIStroke")

	UIStroke.Color = Color3.fromRGB(37, 37, 37)
	UIStroke.Parent = CloseUI

	local dragToggle = nil
	local dragSpeed = 0.1
	local dragStart = nil
	local startPos = nil
	local valUI = true

	Frame:GetPropertyChangedSignal('Size'):Connect(function()
		if Frame.Size.X.Scale <= 0 then
			Frame.Visible = false
		else
			Frame.Visible = true
		end
	end)

	CloseUI:GetPropertyChangedSignal('Size'):Connect(function()
		if CloseUI.Size.X.Scale <= 0 then
			CloseUI.Visible = false
		else
			CloseUI.Visible = true
		end
	end)

	local function ToggleUI(val)
		if val then
			TweenService:Create(Frame,TweenInfo.new(0.5),{Size = Alc.Config["UI Size"]}):Play()
			TweenService:Create(CloseUI,TweenInfo.new(1,Enum.EasingStyle.Quint,Enum.EasingDirection.In),{Size = UDim2.fromScale(0,0)}):Play()
		else
			TweenService:Create(Frame,TweenInfo.new(1,Enum.EasingStyle.Quint,Enum.EasingDirection.In),{Size = UDim2.fromScale(0,0)}):Play()
			TweenService:Create(CloseUI,TweenInfo.new(0.5),{Size = UDim2.fromScale(1,1)}):Play()
		end
	end

		task.spawn(function()
			local Toggle = Instance.new("ScreenGui")
			local Frames = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local UIStroke = Instance.new("UIStroke")
			local logo = Instance.new("ImageLabel")
			local DropShadow = Instance.new("ImageLabel")

			Toggle.Name = "Toggle"
			Toggle.Parent = Alc.CoreGui or game.Players.LocalPlayer:WaitForChild("PlayerGui")
			Toggle.ZIndexBehavior = Enum.ZIndexBehavior.Global

			Frames.Name = 'c4'
			Frames.Parent = Toggle
			Frames.AnchorPoint = Vector2.new(0.5, 0.5)
			Frames.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
			Frames.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Frames.BorderSizePixel = 0
			Frames.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
			Frames.Size = UDim2.new(0, 65, 0, 65)
			Frames.SizeConstraint = Enum.SizeConstraint.RelativeYY
			Frames.ZIndex = 67

			UICorner.Parent = Frames

			UIStroke.Color = Color3.fromRGB(121, 121, 121)
			UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
			UIStroke.Parent = Frames

			logo.Name = "logo"
			logo.Parent = Frames
			logo.AnchorPoint = Vector2.new(0.5, 0.5)
			logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			logo.BackgroundTransparency = 1.010
			logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
			logo.BorderSizePixel = 0
			logo.Position = UDim2.new(0.5, 0, 0.5, 0)
			logo.Size = UDim2.new(0.899999976, 0, 0.899999976, 0)
			logo.ZIndex = 68
			logo.Image = WindowLogo

			DropShadow.Name = "DropShadow"
			DropShadow.Parent = Frames
			DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
			DropShadow.BackgroundTransparency = 1.000
			DropShadow.BorderSizePixel = 0
			DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
			DropShadow.Size = UDim2.new(1, 47, 1, 47)
			DropShadow.ZIndex = 66
			DropShadow.Image = "rbxassetid://6015897843"
			DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
			DropShadow.ImageTransparency = 0.500
			DropShadow.ScaleType = Enum.ScaleType.Slice
			DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

			local dragToggle = false
			local dragStart = nil
			local startPos = nil

			local old = Frames.Position
			local function dInput(input)
				local delta = input.Position - dragStart
				local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
					startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				game:GetService('TweenService'):Create(Frames, TweenInfo.new(dragSpeed), {Position = position}):Play()
			end

			local but = cretate_button(Frames)
			but.ZIndex = 68
			but.MouseButton1Click:Connect(function()
				if old == Frames.Position then
					valUI = not valUI
					ToggleUI(valUI)
				end
			end)
			but.InputBegan:Connect(function(input)
				if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
					dragToggle = true
					dragStart = input.Position
					startPos = Frames.Position
					old = Frames.Position
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragToggle = false
						end
					end)
				end
			end)



			UserInputService.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					if dragToggle then
						dInput(input)
					end
				end
			end)
		end)
	

	
	UIS.InputBegan:Connect(function(io, p)
		if io.KeyCode == UIConfig.Bind then
			if uitoggled == false then
				Frame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 1, true)
				uitoggled = true;
				task.wait(.5)
				Main.Enabled = false
			else
				Frame:TweenSize(UDim2.new(0.100000001, 410, 0.100000001, 240), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 1, true)
				Main.Enabled = true;
				uitoggled = false
			end
		end
	end)

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(Frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	Topbar.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)

	UserInputService.InputBegan:Connect(function(input,ty)
		if ty then
			return
		end

		if input.KeyCode == WindowAlc.Toggle then
			valUI = not valUI
			ToggleUI(valUI)
		end
	end)

	function WindowAlc:AddMenu(MenuName,MenuDescription,MenuIcon,MenuType)
		MenuType = MenuType or 'tab'
		local MenuAlc = {
			Checker = {}
		}

		local MenuButton = Instance.new("Frame")
		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
		local UICorner = Instance.new("UICorner")
		local MenuLogo = Instance.new("ImageLabel")
		local MenuText = Instance.new("TextLabel")
		local MenuDesc = Instance.new("TextLabel")
		local Button = Instance.new("TextButton")

		MenuButton.Name = "MenuButton"
		MenuButton.Parent = MenuScroll
		MenuButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MenuButton.BackgroundTransparency = 1.000
		MenuButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MenuButton.BorderSizePixel = 0
		MenuButton.ClipsDescendants = false
		MenuButton.Size = UDim2.new(0.5, 0, 0.75, 0)
		MenuButton.ZIndex = 4

		UIAspectRatioConstraint.Parent = MenuButton
		UIAspectRatioConstraint.AspectRatio = 0.1
		UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize
		UIAspectRatioConstraint.DominantAxis = Enum.DominantAxis.Height

		TweenService:Create(UIAspectRatioConstraint,TweenInfo.new(0.3 + (#WindowAlc.Tabs / 10),Enum.EasingStyle.Back),{AspectRatio = 4.000}):Play()
		UICorner.CornerRadius = UDim.new(0, 3)
		UICorner.Parent = MenuButton

		MenuLogo.Name = "MenuLogo"
		MenuLogo.Parent = MenuButton
		MenuLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MenuLogo.BackgroundTransparency = 1.000
		MenuLogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MenuLogo.BorderSizePixel = 0
		MenuLogo.Size = UDim2.new(1, 0, 1, 0)
		MenuLogo.SizeConstraint = Enum.SizeConstraint.RelativeYY
		MenuLogo.ZIndex = 5
		MenuLogo.Image = MenuIcon

		MenuText.Name = "MenuText"
		MenuText.Parent = MenuButton
		MenuText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MenuText.BackgroundTransparency = 1.000
		MenuText.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MenuText.BorderSizePixel = 0
		MenuText.Position = UDim2.new(0.010877919, 0, 0.5, 0)
		MenuText.Size = UDim2.new(2.10955262, 0, 0.5, 0)
		MenuText.ZIndex = 5
		MenuText.Font = Enum.Font.GothamBold
		MenuText.Text = MenuName or "Menu"
		MenuText.TextColor3 = Color3.fromRGB(100, 100, 15)
		MenuText.TextTransparency = 0.8
		MenuText.TextScaled = true
		MenuText.TextSize = 14.000
		MenuText.TextWrapped = true
		MenuText.TextXAlignment = Enum.TextXAlignment.Left

		MenuDesc.Name = "MenuDesc"
		MenuDesc.Parent = MenuButton
		MenuDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MenuDesc.BackgroundTransparency = 1.000
		MenuDesc.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MenuDesc.BorderSizePixel = 0
		MenuDesc.Position = UDim2.new(0.11100589, 0, 0.600000083, 0)
		MenuDesc.Size = UDim2.new(2.10955262, 0, 0.349999547, 0)
		MenuDesc.ZIndex = 5
		MenuDesc.Font = Enum.Font.GothamBold
		MenuDesc.Text = MenuDescription or "Description"
		MenuDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
		MenuDesc.TextScaled = true
		MenuDesc.TextSize = 14.000
		MenuDesc.TextTransparency = 0.800
		MenuDesc.TextWrapped = true
		MenuDesc.TextXAlignment = Enum.TextXAlignment.Left

		Button.Name = "Button"
		Button.Parent = MenuButton
		Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Button.BackgroundTransparency = 1.000
		Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Button.BorderSizePixel = 0
		Button.Size = UDim2.new(1, 0, 1, 0)
		Button.ZIndex = 25
		Button.Font = Enum.Font.SourceSans
		Button.Text = ""
		Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button.TextSize = 14.000
		Button.TextTransparency = 1.000
		local MainFrame

		if MenuType:find('tab') then
			local PageFrames = Instance.new("Frame")
			local Search = Instance.new("Frame")
			local SearchEngine = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local UIStroke = Instance.new("UIStroke")
			local LabelText = Instance.new("TextLabel")
			local SearchIcon = Instance.new("ImageLabel")
			local UICorner_2 = Instance.new("UICorner")
			local searchbox = Instance.new("TextBox")
			local Framet = Instance.new("Frame")
			local Frame_2 = Instance.new("Frame")
			local TabFrames = Instance.new("ScrollingFrame")
			local UIListLayout = Instance.new("UIListLayout")
			local Main = Instance.new("Frame")


			PageFrames.Name = "PageFrames"
			PageFrames.Parent = Frame
			PageFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			PageFrames.BackgroundTransparency = 1.000
			PageFrames.BorderColor3 = Color3.fromRGB(0, 0, 0)
			PageFrames.BorderSizePixel = 0
			PageFrames.ClipsDescendants = true
			PageFrames.Position = UDim2.new(0, 0, 0.163185388, 0)
			PageFrames.Size = UDim2.new(1, 0, 0.856814642, 0)
			PageFrames.ZIndex = 1

			MainFrame = PageFrames
			Search.Name = "Search"
			Search.Parent = PageFrames
			Search.AnchorPoint = Vector2.new(0.5, 0.5)
			Search.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Search.BackgroundTransparency = 1.000
			Search.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Search.BorderSizePixel = 0
			Search.ClipsDescendants = true
			Search.Position = UDim2.new(0.177006071, 0, 0.4, 0)
			Search.Size = UDim2.new(0.354012221, 0, 0.980000138, 0)
			Search.ZIndex = 4

			SearchEngine.Name = "SearchEngine"
			SearchEngine.Parent = Frame
			SearchEngine.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			SearchEngine.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SearchEngine.BorderSizePixel = 0
			SearchEngine.ClipsDescendants = true
			SearchEngine.Position = UDim2.new(0.55, 0,0.12, 2)
			SearchEngine.Size = UDim2.new(0, 250, 0, 25)
			SearchEngine.ZIndex = 6

			UICorner.CornerRadius = UDim.new(0, 2)
			UICorner.Parent = SearchEngine

			UIStroke.Thickness = 0.500
			UIStroke.Color = Color3.fromRGB(39, 39, 39)
			UIStroke.Parent = SearchEngine

			LabelText.Name = "LabelText"
			LabelText.Parent = SearchEngine
			LabelText.AnchorPoint = Vector2.new(0.5, 0.5)
			LabelText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.BackgroundTransparency = 1.000
			LabelText.BorderColor3 = Color3.fromRGB(0, 0, 0)
			LabelText.BorderSizePixel = 0
			LabelText.Position = UDim2.new(0.5512374663, 0, 0.489999851, 0)
			LabelText.Size = UDim2.new(0.871346772, 0, 0.50000006, 0)
			LabelText.ZIndex = 6
			LabelText.Font = Enum.Font.GothamBold
			LabelText.Text = "Search"
			LabelText.TextColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.TextScaled = true
			LabelText.TextSize = 14.000
			LabelText.TextTransparency = 0.750
			LabelText.TextWrapped = true
			LabelText.TextXAlignment = Enum.TextXAlignment.Left

			SearchIcon.Name = "SearchIcon"
			SearchIcon.Parent = SearchEngine
			SearchIcon.AnchorPoint = Vector2.new(0.5, 0.5)
			SearchIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SearchIcon.BackgroundTransparency = 1.000
			SearchIcon.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SearchIcon.BorderSizePixel = 0
			SearchIcon.Position = UDim2.new(0.045000003, 0, 0.5, 0)
			SearchIcon.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
			SearchIcon.SizeConstraint = Enum.SizeConstraint.RelativeYY
			SearchIcon.ZIndex = 6
			SearchIcon.Image = "rbxassetid://7734052925"
			SearchIcon.ImageTransparency = 0.750

			UICorner_2.CornerRadius = UDim.new(0, 6)
			UICorner_2.Parent = SearchIcon

			searchbox.Name = "searchbox"
			searchbox.Parent = SearchEngine
			searchbox.AnchorPoint = Vector2.new(0.5, 0.5)
			searchbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			searchbox.BackgroundTransparency = 1.000
			searchbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
			searchbox.BorderSizePixel = 0
			searchbox.Position = UDim2.new(1.46321285, 0, 0.499999851, 0)
			searchbox.Size = UDim2.new(1.16615963, 0, 0.30000006, 0)
			searchbox.ZIndex = 7
			searchbox.ClearTextOnFocus = false
			searchbox.Font = Enum.Font.GothamBold
			searchbox.Text = ""
			searchbox.TextColor3 = Color3.fromRGB(255, 255, 255)
			searchbox.TextScaled = true
			searchbox.TextSize = 14.000
			searchbox.TextWrapped = true
			searchbox.TextXAlignment = Enum.TextXAlignment.Left

			Framet.Parent = Search
			Framet.Active = true
			Framet.AnchorPoint = Vector2.new(0, 0.5)
			Framet.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
			Framet.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Framet.BorderSizePixel = 0
			Framet.Position = UDim2.new(1.01999998, 0, 0.5, 0)
			Framet.Rotation = 0
			Framet.Size = UDim2.new(0.00499999989, 0, 1, 0)
			Framet.ZIndex = 3

			Frame_2.Parent = Framet
			Frame_2.Active = true
			Frame_2.AnchorPoint = Vector2.new(0, 0.5)
			Frame_2.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
			Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Frame_2.BorderSizePixel = 0
			Frame_2.Position = UDim2.new(1.00999999, 0, 0.5, 0)
			Frame_2.Size = UDim2.new(1, 0, 1, 0)
			Frame_2.ZIndex = 3

			TabFrames.Name = "TabFrames"
			TabFrames.Parent = Search
			TabFrames.Active = true
			TabFrames.AnchorPoint = Vector2.new(0.5, 0.5)
			TabFrames.BackgroundColor3 = Color3.fromRGB(25, 255, 255)
			TabFrames.BackgroundTransparency = 1.000
			TabFrames.BorderColor3 = Color3.fromRGB(0, 0, 0)
			TabFrames.BorderSizePixel = 0
			TabFrames.ClipsDescendants = false
			TabFrames.Position = UDim2.new(-0.199, 5, 0.549316823, 5)
			TabFrames.Size = UDim2.new(0.949999988, 0, 0.901000023, 0)
			TabFrames.ZIndex = 6
			TabFrames.ScrollBarThickness = 0

			scrolling_connectY(TabFrames)
			UIListLayout.Parent = TabFrames
			UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout.Padding = UDim.new(0, 4)

			Main.Name = "Main"
			Main.Parent = PageFrames
			Main.AnchorPoint = Vector2.new(0.5, 0.5)
			Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Main.BackgroundTransparency = 1.000
			Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Main.BorderSizePixel = 0
			Main.ClipsDescendants = true
			Main.Position = UDim2.new(0.545165405, 0, 0.5, 0)
			Main.Size = UDim2.new(0.859669089, 0, 0.980000019, 0)
			Main.ZIndex = 4


			searchbox.Focused:Connect(function()
				TweenService:Create(LabelText,TweenInfo.new(0.1),{TextTransparency = 1}):Play()
				TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageTransparency = 1}):Play()
			end)

			searchbox.FocusLost:Connect(function()
				if #searchbox.Text > 0 then
					for i,v in ipairs(TabFrames:GetChildren()) do
						if v:IsA('Frame') then
							if v.Name:lower():find(searchbox.Text:lower()) then
								v.Visible = true
							else
								v.Visible = false
							end
						end
					end
				else
					TweenService:Create(LabelText,TweenInfo.new(0.1),{TextTransparency = 0.75}):Play()
					TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageTransparency = 0.75}):Play()
					for i,v in ipairs(TabFrames:GetChildren()) do
						if v:IsA('Frame') then
							v.Visible = true
						end
					end
				end
			end)

			searchbox:GetPropertyChangedSignal('Text'):Connect(function()
				if #searchbox.Text > 0 then
					TweenService:Create(LabelText,TweenInfo.new(0.1),{TextTransparency = 1}):Play()
					TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageTransparency = 1}):Play()
					for i,v in ipairs(TabFrames:GetChildren()) do
						if v:IsA('Frame') then
							if v.Name:lower():find(searchbox.Text:lower()) then
								v.Visible = true
							else
								v.Visible = false
							end
						end
					end
				else
					TweenService:Create(LabelText,TweenInfo.new(0.1),{TextTransparency = 0.75}):Play()
					TweenService:Create(SearchIcon,TweenInfo.new(0.1),{ImageTransparency = 0.75}):Play()

					for i,v in ipairs(TabFrames:GetChildren()) do
						if v:IsA('Frame') then
							v.Visible = true
						end
					end
				end
			end)

		elseif MenuType:find('change') then
			local ChangeLog = Instance.new("Frame")
			local Main = Instance.new("Frame")
			local MainScrolling = Instance.new("ScrollingFrame")
			local UIListLayout = Instance.new("UIListLayout")
			local Framec = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			scrolling_connectY(MainScrolling)
			ChangeLog.Name = "ChangeLog"
			ChangeLog.Parent = Frame
			ChangeLog.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ChangeLog.BackgroundTransparency = 1.000
			ChangeLog.BorderColor3 = Color3.fromRGB(0, 0, 0)
			ChangeLog.BorderSizePixel = 0
			ChangeLog.Position = UDim2.new(0, 0, 0.163185388, 0)
			ChangeLog.Size = UDim2.new(1, 0, 0.836814642, 0)
			ChangeLog.Visible = true

			ChangeLog.ZIndex = 4
			MainFrame = ChangeLog

			Main.Name = "Main"
			Main.Parent = ChangeLog
			Main.AnchorPoint = Vector2.new(0.5, 0.5)
			Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Main.BackgroundTransparency = 1.000
			Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Main.BorderSizePixel = 0
			Main.ClipsDescendants = true
			Main.Position = UDim2.new(0.5, 0, 0.5, 0)
			Main.Size = UDim2.new(0.949999988, 0, 0.949999988, 0)
			Main.ZIndex = 4

			MainScrolling.Name = "MainScrolling"
			MainScrolling.Parent = Main
			MainScrolling.Active = true
			MainScrolling.AnchorPoint = Vector2.new(0.5, 0.5)
			MainScrolling.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			MainScrolling.BackgroundTransparency = 1.000
			MainScrolling.BorderColor3 = Color3.fromRGB(0, 0, 0)
			MainScrolling.BorderSizePixel = 0
			MainScrolling.ClipsDescendants = false
			MainScrolling.Position = UDim2.new(0.5, 0, 0.5, 0)
			MainScrolling.Size = UDim2.new(0.99000001, 0, 1, 0)
			MainScrolling.ZIndex = 2
			MainScrolling.ScrollBarThickness = 0

			UIListLayout.Parent = MainScrolling
			UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout.Padding = UDim.new(0, 5)

			Framec.Parent = ChangeLog
			Framec.AnchorPoint = Vector2.new(0.5, 1)
			Framec.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
			Framec.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Framec.BorderSizePixel = 0
			Framec.Position = UDim2.new(0.5, 0, 0, 0)
			Framec.Size = UDim2.new(0.949999988, 0, 0.00499999989, 0)

			UICorner.CornerRadius = UDim.new(0.5, 0)
			UICorner.Parent = Framec
		end

		local myindex = #WindowAlc.Tabs + 1

		local function Connect(val)
			if val then
				TweenService:Create(MainFrame,TweenInfo.new(0.3),{Position = UDim2.fromScale(0,0.163)}):Play()
				TweenService:Create(MenuText,TweenInfo.new(0.1 + (myindex / 10)),{TextColor3 = Color3.fromRGB(255,255,255),TextTransparency=0.8}):Play()
			else

				if myindex < WindowAlc.TabSelect then
					TweenService:Create(MainFrame,TweenInfo.new(0.3),{Position = UDim2.fromScale(-1,0.163)}):Play()
				else
					TweenService:Create(MainFrame,TweenInfo.new(0.3),{Position = UDim2.fromScale(1,0.163)}):Play()
				end
				TweenService:Create(MenuText,TweenInfo.new(0.1),{TextColor3 = Color3.fromRGB(255, 255, 255),TextTransparency=0.25}):Play()
			end
		end

		if not WindowAlc.Tabs[1] then
			Connect(true)
		else
			Connect(false)
		end

		table.insert(WindowAlc.Tabs,{MenuButton,Connect})

		myindex = #WindowAlc.Tabs

		Button.MouseButton1Click:Connect(function()
			WindowAlc.TabSelect = myindex
			for i,v in ipairs(WindowAlc.Tabs) do
				if v[1]==MenuButton then
					WindowAlc.TabSelect = i
					v[2](true)
				else
					v[2](false)
				end
			end
		end)

		function MenuAlc:AddTab(TabName,IconId,Descriptions)
			local MainTab = {

			}

			local TabAlc = {}

			local MainScrollingfr
			if MenuType:find('tab') then
				local MainScrolling = Instance.new("ScrollingFrame")
				local UIListLayout_2 = Instance.new("UIListLayout")

				scrolling_connectY(MainScrolling)
				MainScrollingfr = MainScrolling
				MainScrolling.Name = tostring(TabName or "Main")
				MainScrolling.Name = "MainScrolling"
				MainScrolling.Parent =  MainFrame:WaitForChild('Main')
				MainScrolling.Active = true
				MainScrolling.AnchorPoint = Vector2.new(0.5, 0.5)
				MainScrolling.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				MainScrolling.BackgroundTransparency = 1.000
				MainScrolling.BorderColor3 = Color3.fromRGB(0, 0, 0)
				MainScrolling.BorderSizePixel = 0
				MainScrolling.ClipsDescendants = false
				MainScrolling.Position = UDim2.new(0.1, 0, 0.1, 0)
				MainScrolling.Size = UDim2.new(0.99500001, 0, 1, 0)
				MainScrolling.ZIndex = 2
				MainScrolling.ScrollBarThickness = 0

				UIListLayout_2.Parent = MainScrolling
				UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
				UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_2.Padding = UDim.new(0, 1.5)

				local TabButton = Instance.new("Frame")
				local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
				local UICorner = Instance.new("UICorner")
				local UIStroke = Instance.new("UIStroke")
				local UIGradient = Instance.new("UIGradient")
				local TabIcon = Instance.new("ImageLabel")
				local Text = Instance.new("TextLabel")
				local Description = Instance.new("TextLabel")
				local Button = Instance.new("TextButton")

				TabButton.Name = tostring(TabName or "Main")
				TabButton.Parent = MainFrame:WaitForChild('Search'):WaitForChild('TabFrames')
				TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				TabButton.BackgroundTransparency = 1
				TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
				TabButton.BorderSizePixel = 0
				TabButton.Size = UDim2.new(1, 0, 1, 0)
				TabButton.ZIndex = 5

				UIAspectRatioConstraint.Parent = TabButton
				UIAspectRatioConstraint.AspectRatio = 4.250
				UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

				UICorner.CornerRadius = UDim.new(0, 5)
				UICorner.Parent = TabButton

				UIStroke.Transparency = 0
				UIStroke.Color = Color3.fromRGB(221,160,221)
				UIStroke.Parent = Button

				UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.50), NumberSequenceKeypoint.new(0.20, 0.00), NumberSequenceKeypoint.new(0.80, 0.00), NumberSequenceKeypoint.new(1.00, 0.50)}
				UIGradient.Parent = UIStroke

				TabIcon.Name = "TabIcon"
				TabIcon.Parent = TabButton
				TabIcon.AnchorPoint = Vector2.new(0.5, 0.5)
				TabIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TabIcon.BackgroundTransparency = 1.000
				TabIcon.BorderColor3 = Color3.fromRGB(0, 0, 0)
				TabIcon.BorderSizePixel = 0
				TabIcon.Position = UDim2.new(0.84, 0, 0.5, 0)
				TabIcon.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
				TabIcon.SizeConstraint = Enum.SizeConstraint.RelativeYY
				TabIcon.ZIndex = 6
				TabIcon.Image = "rbxassetid://"..IconId
		

				Text.Name = "Text"
				Text.Parent = TabButton
				Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text.BackgroundTransparency = 1.000
				Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Text.BorderSizePixel = 0
				Text.Position = UDim2.new(0.246999651, 0, 0.200000003, 0)
				Text.Size = UDim2.new(0.753000021, 0, 0.400000006, 0)
				Text.ZIndex = 7
				Text.Font = Enum.Font.GothamBold
				Text.Text = "" or ""
				Text.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text.TextScaled = true
				Text.TextSize = 14.000
				Text.TextWrapped = true
				Text.TextXAlignment = Enum.TextXAlignment.Left

				Description.Name = "Description"
				Description.Parent = TabButton
				Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Description.BackgroundTransparency = 1.000
				Description.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Description.BorderSizePixel = 0
				Description.Position = UDim2.new(0.246999651, 0, 0.600000024, 0)
				Description.Size = UDim2.new(0.753000081, 0, 0.25, 0)
				Description.ZIndex = 7
				Description.Font = Enum.Font.GothamBold
				Description.Text = ""
				Description.TextColor3 = Color3.fromRGB(255, 255, 255)
				Description.TextScaled = true
				Description.TextSize = 14.000
				Description.TextTransparency = 0.500
				Description.TextWrapped = true
				Description.TextXAlignment = Enum.TextXAlignment.Left

				Button.Name = "Button"
				Button.Parent = TabButton
				Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Button.BackgroundTransparency = 1.000
				Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Button.BorderSizePixel = 0
				Button.Size = UDim2.new(1, 0, 1, 0)
				Button.ZIndex = 25
				Button.Font = Enum.Font.SourceSans
				Button.Text = ""
				Button.TextColor3 = Color3.fromRGB(0, 0, 0)
				Button.TextSize = 14.000
				Button.TextTransparency = 1.000

				local function connect(val)
					local centerPos = UDim2.new(0.5, 0, 0.5, 0)
					local fullSize = UDim2.new(1, 0, 1, 0)
					local smallSize = UDim2.new(0.8, 0, 0.8, 0)
				
					if val then
						-- Activate visuals
						MainScrolling.Visible = true -- Make sure it's visible
						Text.TextColor3 = Color3.fromRGB(221, 160, 221)
						TabButton.BackgroundTransparency = 0
						TweenService:Create(TabIcon, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
						TweenService:Create(Description, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0.5}):Play()
						TweenService:Create(Text, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
						TweenService:Create(UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Transparency = 0.25}):Play()
				
						TweenService:Create(MainScrolling, TweenInfo.new(0.35, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
							Position = centerPos,
							Size = fullSize
						}):Play()
				
					else
						-- Deactivate visuals
						Text.TextColor3 = Color3.fromRGB(255, 255, 255)
						TabButton.BackgroundTransparency = 1
						TweenService:Create(TabIcon, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {ImageTransparency = 0.55}):Play()
						TweenService:Create(Description, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {TextTransparency = 0.85}):Play()
						TweenService:Create(Text, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {TextTransparency = 0.55}):Play()
						TweenService:Create(UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {Transparency = 0.65}):Play()
				
						-- Tween and hide after animation
						local tween = TweenService:Create(MainScrolling, TweenInfo.new(0.35, Enum.EasingStyle.Cubic, Enum.EasingDirection.In), {
							Position = centerPos,
							Size = smallSize
						})
				
						tween:Play()
						tween.Completed:Connect(function()
							MainScrolling.Visible = false
						end)
					end
				end
				


				if not MenuAlc[1] then
					connect(true)
				else
					connect(false)
				end

				table.insert(MenuAlc,{connect,TabIcon})

				Button.MouseButton1Click:Connect(function()
					for i,v in ipairs(MenuAlc) do
						if v[2] == TabIcon then
							v[1](true)
						else
							v[1](false)
						end
					end
				end)
			elseif MenuType:find('change') then
				MainScrollingfr = MainFrame:FindFirstChild('Main'):FindFirstChild('MainScrolling')
			end

			function MainTab:AddLabel(LabelName, status)
				local SectionTitle = Instance.new("TextLabel")
				local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
			
				SectionTitle.Name = "SectionTitle"
				SectionTitle.Parent = MainScrollingfr
				SectionTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				SectionTitle.BackgroundTransparency = 1.000
				SectionTitle.BorderSizePixel = 0
				SectionTitle.Size = UDim2.new(0.980000019, 0, 0.5, 0)
				SectionTitle.ZIndex = 4
				SectionTitle.Font = Enum.Font.GothamBold
				SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
				SectionTitle.TextScaled = true
				SectionTitle.TextSize = 14.000
				SectionTitle.TextWrapped = true
				SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
			
				-- Set the initial text with the label name and status indicator
				local indicator = (status == "positive") and "🟢" or "🔴"
				SectionTitle.Text = LabelName .. ": " .. indicator
			
				UIAspectRatioConstraint.Parent = SectionTitle
				UIAspectRatioConstraint.AspectRatio = 23.000
				UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize
			
				local Config = {}
			
				function Config:SetStatus(newStatus)
					-- Update the text with the correct indicator based on the status
					local newIndicator = (newStatus == "positive") and "🟢" or "🔴"
					SectionTitle.Text = LabelName .. ": " .. newIndicator
				end
			
				function Config:Delete()
					SectionTitle:Destroy()
				end
			
				return Config
			end
			

		function MainTab:AddSection(SectionName, SectionHeader, SectionDescriptions, SectionIcons)
    local SectionTitle = Instance.new("TextLabel")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local SectionInfo = {}

    -- Section Title Properties
    SectionTitle.Name = "SectionTitle"
    SectionTitle.Parent = MainScrollingfr
    SectionTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SectionTitle.BackgroundTransparency = 1.000
    SectionTitle.Size = UDim2.new(0.98, 0, 0.5, 0)
    SectionTitle.ZIndex = 4
    SectionTitle.Font = Enum.Font.GothamBold
    SectionTitle.Text = SectionName or "SECTION"
    SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	SectionTitle.TextSize = 15
    SectionTitle.TextScaled = false
    SectionTitle.TextWrapped = true
    SectionTitle.TextXAlignment = Enum.TextXAlignment.Left

    -- UI Constraint
    UIAspectRatioConstraint.Parent = SectionTitle
    UIAspectRatioConstraint.AspectRatio = 23.000
    UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

    local SectionFrame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIStroke = Instance.new("UIStroke")
    local UIListLayout = Instance.new("UIListLayout")
    local Header = Instance.new("Frame")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local SectionIcon = Instance.new("ImageLabel")
	local SectionIcon2 = Instance.new("ImageLabel")
    local SectionHeadTest = Instance.new("TextLabel")
    local SectionDescription = Instance.new("TextLabel")
    local Frame = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")

    -- Improved Size Update Function
    local function UpdateSiz()
        -- Calculate the height dynamically based on the content
        local contentHeight = UIListLayout.AbsoluteContentSize.Y
        SectionFrame.Size = UDim2.new(1, 0, 0, contentHeight + 10) -- Added slight padding

        -- Manually adjust UIStroke thickness to fit the new size
        UIStroke.Thickness = 1  -- Adjust the thickness as needed
    end

    -- Detect Layout Changes to Trigger Size Update
    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateSiz)

    -- Ensure to update when elements are added or removed
    SectionFrame.ChildAdded:Connect(UpdateSiz)
    SectionFrame.ChildRemoved:Connect(UpdateSiz)

    -- Properties:
    SectionFrame.Name = "SectionFrame"
    SectionFrame.Parent = MainScrollingfr
    SectionFrame.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
	SectionFrame.BackgroundTransparency = 1
    SectionFrame.Size = UDim2.new(1, -10, 0, 65) -- Added horizontal padding
    SectionFrame.ZIndex = 6
    SectionFrame.ClipsDescendants = true -- Ensures nothing goes out of bounds
    UpdateSiz() -- Call it initially to set the right size



    UIListLayout.Parent = SectionFrame
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5) -- Consistent padding between elements

    -- Section Header Setup
    Header.Name = "Header"
    Header.Parent = SectionFrame
    Header.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Header.BackgroundTransparency = 1.000
    Header.Size = UDim2.new(0.95, 0, 0.5, 0)
    Header.ZIndex = 5
    UICorner.Parent = Header
	UIStroke.Color = Color3.fromRGB(221,160,221)
	UIStroke.Transparency = 0.9
    UIStroke.Parent = Header
    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border  -- Ensure stroke is applied as a border


    UIAspectRatioConstraint.Parent = Header
    UIAspectRatioConstraint.AspectRatio = 4.000
    UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

    -- Section Icon
    SectionIcon.Name = "SectionIcon"
    SectionIcon.Parent = Header
    SectionIcon.AnchorPoint = Vector2.new(0, 0.5)
    SectionIcon.BackgroundTransparency = 1.000
    SectionIcon.Position = UDim2.new(0.05, 0, 0.4, 0)
    SectionIcon.Size = UDim2.new(0.5, 0, 0.5, 0)
    SectionIcon.SizeConstraint = Enum.SizeConstraint.RelativeYY
    SectionIcon.ZIndex = 6
    SectionIcon.Image = SectionIcons

	  -- Section Icon
SectionIcon2.Name = "SectionIcon"
SectionIcon2.Parent = Header
SectionIcon2.AnchorPoint = Vector2.new(0.5, 0.7)
SectionIcon2.BackgroundTransparency = 1.000
SectionIcon2.Position = UDim2.new(0.95, 0, 0.6, 0)
SectionIcon2.Size = UDim2.new(0.5, 0, 0.5, 0)
SectionIcon2.SizeConstraint = Enum.SizeConstraint.RelativeYY
SectionIcon2.ZIndex = 6
--SectionIcon2.Image = "rbxassetid://85854386623485"



    -- Header Text
    SectionHeadTest.Name = "SectionHeadTest"
    SectionHeadTest.Parent = Header
    SectionHeadTest.BackgroundTransparency = 1.000
    SectionHeadTest.Position = UDim2.new(0.22, 0, 0.095, 0)
    SectionHeadTest.Size = UDim2.new(0.7, 0, 0.195, 0) -- Adjusted size to avoid overlapping
    SectionHeadTest.ZIndex = 5
    SectionHeadTest.Font = Enum.Font.GothamBold
    SectionHeadTest.Text = SectionHeader or "Data Settings"
    SectionHeadTest.TextColor3 = Color3.fromRGB(255, 255, 255)
    SectionHeadTest.TextScaled = false
	SectionHeadTest.TextSize = 14
    SectionHeadTest.TextWrapped = true
    SectionHeadTest.TextXAlignment = Enum.TextXAlignment.Left

    -- Description
    SectionDescription.Name = "SectionDescription"
    SectionDescription.Parent = Header
    SectionDescription.BackgroundTransparency = 1.000
    SectionDescription.Position = UDim2.new(0.22, 0, 0.255, 0)
    SectionDescription.Size = UDim2.new(0.7, 0, 0.495, 0) -- Adjusted size to fit properly
    SectionDescription.ZIndex = 5
    SectionDescription.Font = Enum.Font.GothamBold
    SectionDescription.Text = SectionDescriptions or "Save The Setting"
    SectionDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
    SectionDescription.TextSize = 11.000
    SectionDescription.TextTransparency = 0.5
    SectionDescription.TextWrapped = true
    SectionDescription.TextXAlignment = Enum.TextXAlignment.Left

    -- Bottom Frame Bar
    Frame.Parent = Header
    Frame.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame.BackgroundColor3 = Color3.fromRGB(221,160,221)
	Frame.BackgroundTransparency = 0.6
    Frame.Position = UDim2.new(0.5, 0, 0.9, 0)
    Frame.Size = UDim2.new(0.95, 0, 0.020, 0)
    Frame.ZIndex = 5

    UICorner_2.CornerRadius = UDim.new(0.5, 0)
    UICorner_2.Parent = Frame

    -- Function to Expose Update
    function SectionInfo:Update()
        UpdateSiz()
    end

	function SectionInfo:AddLabel(LabelName)
		local SectionTitle = Instance.new("TextLabel")
		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
		local Config = {}
	
		-- Configure the TextLabel
		SectionTitle.Name = "SectionTitle"
		SectionTitle.Parent = SectionFrame
		SectionTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SectionTitle.BackgroundTransparency = 1.0
		SectionTitle.BorderSizePixel = 0
		SectionTitle.Size = UDim2.new(0.92, 0, 0.5, 0)
		SectionTitle.ZIndex = 4
		SectionTitle.Font = Enum.Font.GothamBold
		SectionTitle.Text = LabelName or "SECTION"
		SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		SectionTitle.TextTransparency = 0.5
		SectionTitle.TextScaled = false
		SectionTitle.TextSize = 12.0
		SectionTitle.TextWrapped = true
		SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
	
		-- Set up AspectRatioConstraint
		UIAspectRatioConstraint.Parent = SectionTitle
		UIAspectRatioConstraint.AspectRatio = 23.0
		UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize
	
		-- Function to update text
		function Config:Set(newText)
			SectionTitle.Text = tostring(newText)
		end
	
		-- Function to delete the label
		function Config:Delete()
			SectionTitle:Destroy()
			UpdateSiz()
		end
	
		-- Optionally update the section's size
		SectionInfo:Update()
	
		return Config
	end
	
    
    function SectionInfo:AddSeperator(text)
        local Seperator = Instance.new("Frame")
        local Sep1 = Instance.new("Frame")
        local Sep2 = Instance.new("TextLabel")
        local Sep3 = Instance.new("Frame")
        local Sep21 = Instance.new("TextLabel")
        local Sep212 = Instance.new("TextLabel")
		local UIStroke = Instance.new("UIStroke")
		local UICorner_2 = Instance.new("UICorner")

        
        Seperator.Name = "Seperator"
        Seperator.Parent = SectionFrame
        Seperator.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		Seperator.BorderSizePixel = 0
        Seperator.BackgroundTransparency = 1
        Seperator.ZIndex = 4
        Seperator.Size =  UDim2.new(0.90, 0, 0, 30)

		UICorner_2.CornerRadius = UDim.new(0.4, 0)
    UICorner_2.Parent = Seperator

        UIStroke.Color = Color3.fromRGB(221,160,221)
	UIStroke.Transparency = 0.5
    UIStroke.Parent = Seperator
    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border


        Sep1.Name = "Sep1"
        Sep1.Parent = Seperator
        Sep1.BackgroundColor3 = Color3.fromRGB(221,160,221)
        Sep1.BackgroundTransparency = 0
        Sep1.ZIndex = 10
        Sep1.BorderSizePixel = 0
		Sep1.ZIndex = 6
        Sep1.Position = UDim2.new(0, 10, 0, 10)
        Sep1.Size = UDim2.new(0, 90, 0, 2)
		Sep1.Visible = false
        
        Sep2.Name = "Sep2"
        Sep2.Parent = Seperator
        Sep2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Sep2.BackgroundTransparency = 1
        Sep2.AnchorPoint = Vector2.new(0.5, 0.5) -- Center alignment
Sep2.Position = UDim2.new(0.5, 0, 0.5, 0) -- Centered position
Sep2.Size = UDim2.new(0.95, 0, 0, 30) -- Width 95% of parent, height 30 pixels

        Sep2.Font = Enum.Font.SourceSansBold
        Sep2.Text = text
	    Sep2.RichText = true
        Sep2.ZIndex = 6
        Sep2.TextColor3 = Color3.fromRGB(255,255,255)
        Sep2.TextTransparency = 0.5
        Sep2.TextSize = 18.000

        Sep21.Name = "Sep2"
        Sep21.Parent = Seperator
        Sep21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Sep21.BackgroundTransparency = 1
        Sep21.Position = UDim2.new(0, 0, 0, 0)
        Sep21.Size = UDim2.new(0.3385, 0, 0, 30)
        Sep21.Font = Enum.Font.SourceSansBold
        Sep21.Text = "<<"
	    Sep21.RichText = true
        Sep21.ZIndex = 6
        Sep21.TextColor3 = Color3.fromRGB(221,160,221)
        Sep21.TextSize = 20.000

        Sep212.Name = "Sep2"
        Sep212.Parent = Seperator
        Sep212.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Sep212.BackgroundTransparency = 1
        Sep212.Position = UDim2.new(0, 0, 0, 0)
        Sep212.AnchorPoint = Vector2.new(1, 0.5) -- Aligns the right edge of the frame to the position
        Sep212.Position = UDim2.new(0.8, 0, 0.5, 0)
        Sep212.Font = Enum.Font.SourceSansBold
        Sep212.Text = ">>"
	    Sep212.RichText = true
        Sep212.ZIndex = 6
        Sep212.TextColor3 = Color3.fromRGB(221,160,221)
        Sep212.TextSize = 20.000
        
        
        Sep3.Name = "Sep3"
        Sep3.Parent = Seperator
        Sep3.BackgroundColor3 = Color3.fromRGB(221,160,221)
        Sep3.BackgroundTransparency = .1
        Sep3.BorderSizePixel = 0
        Sep3.ZIndex = 6
		Sep3.Visible = false
        Sep3.Position = UDim2.new(0, 280, 0, 10)
        Sep3.Size = UDim2.new(0, 90, 0, 2)
        end
        

                function SectionInfo:addLabel(text)
				local Label = Instance.new("TextLabel")
				local PaddingLabel = Instance.new("UIPadding")
				local labelfunc = {}
				Label.Name = "Label"
				Label.Parent = SectionFrame;
				Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Label.BackgroundTransparency = 1.000;
				Label.Size = UDim2.new(0, 270, 0, 20)
				Label.Font = Enum.Font.GothamBold;
				Label.TextColor3 = Color3.fromRGB(225, 225, 255)
				Label.TextTransparency = 0.5;
				Label.TextSize = 10.000;
				Label.Text = text
                Label.ZIndex = 5
				Label.TextXAlignment = Enum.TextXAlignment.Left;
				PaddingLabel.PaddingLeft = UDim.new(0, 10)
				PaddingLabel.Parent = Label;
				PaddingLabel.Name = "PaddingLabel"
				function labelfunc:Set(newtext)
					Label.Text = newtext
				end;
				return labelfunc
			end;

function SectionInfo:Textbox(Name, PlaceholderText, Callback)
    -- Frame for Input
    local InputFrame = Instance.new("Frame")
    InputFrame.Name = "Input"
    InputFrame.Parent = SectionFrame  -- Assuming SectionFrame is defined somewhere in your script
    InputFrame.BorderSizePixel = 0
    InputFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	--InputFrame.AnchorPoint = Vector2.new(0.5, 0)
    InputFrame.Size = UDim2.new(0.925, 0, 0, 33)
    InputFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    InputFrame.ZIndex = 6

  local UiToggle_UiStroke1 = Instance.new("UIStroke")
	UiToggle_UiStroke1.Color = Color3.fromRGB(255, 255, 255)
	UiToggle_UiStroke1.Thickness = 1;
    UiToggle_UiStroke1.Transparency = 0.95;
	UiToggle_UiStroke1.Name = "UiToggle_UiStroke1"
	UiToggle_UiStroke1.Parent = InputFrame;

  

    -- UICorner for Input Frame
    local InputCorner = Instance.new("UICorner")
    InputCorner.Parent = InputFrame
    InputCorner.CornerRadius = UDim.new(0, 2)

    -- Title (Label) for Input
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = InputFrame
    Title.BorderSizePixel = 0
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.TextTransparency = 0.2
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(2, 0, 1, 0)
    Title.Position = UDim2.new(0.02, 0, 0, 0)
    Title.Text = Name  -- Use Name directly instead of Options.Name
    Title.ZIndex = 6

    -- TextBox for Input
    local TextBox = Instance.new("TextBox")
    TextBox.Name = "TextBox"
    TextBox.Parent = InputFrame
    TextBox.CursorPosition = -1
    TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.BorderSizePixel = 0
    TextBox.TextTransparency = 0.2
    TextBox.TextSize = 10
    TextBox.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
    TextBox.Font = Enum.Font.GothamBold
	TextBox.ClipsDescendants = true;
    TextBox.AnchorPoint = Vector2.new(1, 0)
    TextBox.PlaceholderText = PlaceholderText -- Use PlaceholderText directly
    TextBox.Size = UDim2.new(0, 150, 0, 28)
    TextBox.Position = UDim2.new(1, -5, 0, 3)
    TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextBox.Text = ""
    TextBox.ZIndex = 6


    -- UICorner for TextBox
    local TextBoxCorner = Instance.new("UICorner")
    TextBoxCorner.Parent = TextBox
    TextBoxCorner.CornerRadius = UDim.new(0, 5)

    -- Callback for TextBox
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            Callback(TextBox.Text)
        end -- Automatically update size on FocusLost
    end)
end

function SectionInfo:Toggle1(ToggleName,ToggleDefault,Callback)
					local Toggle = Instance.new("Frame")
					local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
					local MainFrame = Instance.new("Frame")
					local UICorner = Instance.new("UICorner")
					local Text = Instance.new("TextLabel")
					local System = Instance.new("Frame")
					local UICorner_2 = Instance.new("UICorner")
					local TurnOn = Instance.new("ImageLabel")
					local Box = Instance.new("Frame")
					local UIGradient = Instance.new("UIGradient")
					local UICorner_3 = Instance.new("UICorner")

					--Properties:

					Toggle.Name = "Toggle"
					Toggle.Parent = SectionFrame
					Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Toggle.BackgroundTransparency = 1.000
					Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Toggle.BorderSizePixel = 0
					Toggle.Size = UDim2.new(0.980000019, 0, 0.5, 0)
					Toggle.ZIndex = 5

					UIAspectRatioConstraint.Parent = Toggle
					UIAspectRatioConstraint.AspectRatio = 11.500
					UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

					MainFrame.Name = "MainFrame"
					MainFrame.Parent = Toggle
					MainFrame.AnchorPoint = Vector2.new(0.5, 0)
					MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					MainFrame.BackgroundTransparency = 1.000
					MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
					MainFrame.BorderSizePixel = 0
					MainFrame.Position = UDim2.new(0.5, 0, 0, 0)
					MainFrame.Size = UDim2.new(0.949999988, 0, 1, 0)
					MainFrame.ZIndex = 6

					UICorner.CornerRadius = UDim.new(0, 3)
					UICorner.Parent = MainFrame

					Text.Name = "Text"
					Text.Parent = MainFrame
					Text.AnchorPoint = Vector2.new(0.5, 0.5)
					Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Text.BackgroundTransparency = 1.000
					Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Text.BorderSizePixel = 0
					Text.Position = UDim2.new(0.531999981, 0, 0.5, 0)
					Text.Size = UDim2.new(1.12300003, 0, 0.524999976, 0)
					Text.ZIndex = 6
					Text.Font = Enum.Font.GothamBold
					Text.Text = ToggleName or "Auto Fuck"
					Text.TextColor3 = Color3.fromRGB(255, 255, 255)
					Text.TextScaled = true
					Text.TextSize = 14.000
					Text.TextWrapped = true
					Text.TextXAlignment = Enum.TextXAlignment.Left

					System.Name = "System"
					System.Parent = MainFrame
					System.AnchorPoint = Vector2.new(0.5, 0.5)
					System.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
					System.BorderColor3 = Color3.fromRGB(0, 0, 0)
					System.BorderSizePixel = 0
                    System.BackgroundTransparency = 1
					System.Position = UDim2.new(10.0419999994, 0, 0.5, 0)
					System.Size = UDim2.new(0.824999988, 0, 0.824999988, 0)
					System.SizeConstraint = Enum.SizeConstraint.RelativeYY
					System.ZIndex = 6

					UICorner_2.CornerRadius = UDim.new(0, 3)
					UICorner_2.Parent = System

					TurnOn.Name = "TurnOn"
					TurnOn.Parent = System
					TurnOn.AnchorPoint = Vector2.new(0.5, 0.5)
					TurnOn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TurnOn.BackgroundTransparency = 1.000
					TurnOn.BorderColor3 = Color3.fromRGB(0, 0, 0)
					TurnOn.BorderSizePixel = 0
					TurnOn.Position = UDim2.new(0.5, 0, 0.5, 0)
					TurnOn.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
					TurnOn.ZIndex = 7
					TurnOn.Image = "rbxassetid://3944680095"
					TurnOn.ImageColor3 = Color3.fromRGB(0, 0, 0)
					TurnOn.ImageTransparency = 1.000

					Box.Name = "Box"
					Box.Parent = System
					Box.AnchorPoint = Vector2.new(0.5, 0.5)
					Box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Box.BorderSizePixel = 0
					Box.Position = UDim2.new(0.5, 0, 0.5, 0)
					Box.ZIndex = 6

					UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Alc.Config.MainColor), ColorSequenceKeypoint.new(1.00, Alc.Config.DropColor)}
					UIGradient.Rotation = 45
					UIGradient.Parent = Box

					UICorner_3.CornerRadius = UDim.new(0, 4)
					UICorner_3.Parent = Box

					local function Onv(val)
						if val then
							TweenService:Create(TurnOn,TweenInfo.new(0.4),{
								ImageTransparency = 0
							}):Play()

							TweenService:Create(Box,TweenInfo.new(0.3),{
								Size = UDim2.fromScale(1,1)
							}):Play()

							TweenService:Create(TurnOn,TweenInfo.new(0.55),{
								ImageColor3 = Alc.Config.MainColor
							}):Play()
						else
							TweenService:Create(TurnOn,TweenInfo.new(0.4),{
								ImageTransparency = 1
							}):Play()

							TweenService:Create(Box,TweenInfo.new(0.3),{
								Size = UDim2.fromScale(0,0)
							}):Play()

							TweenService:Create(TurnOn,TweenInfo.new(0.555),{
								ImageColor3 = Color3.fromRGB(0, 0, 0)
							}):Play()
						end
					end

					Onv(ToggleDefault)

					cretate_button(MainFrame).MouseButton1Click:Connect(function()
						ToggleDefault = not ToggleDefault
						Onv(ToggleDefault)
						if Callback then
							Callback(ToggleDefault)
						end
					end)

					SectionInfo:Update()

					local Config = {}

					function Config:Text(...)
						Text.Text = tostring(...)
					end

					function Config:Value(V)
						ToggleDefault =V
						Onv(V)
						if Callback then
							Callback(ToggleDefault)
						end
					end

					function Config:Delete()
						Toggle:Destroy()
						UpdateSiz()
					end

					return Config
				end

				function  SectionInfo:AddToggle1(TextName,default,callback)
				local Toggle = Instance.new("Frame")
				local UICorner_Toggle = Instance.new("UICorner")
				local Toggle_Click = Instance.new("TextButton")
				local Toggle_Text = Instance.new("TextLabel")
				local Toggle_Icon = Instance.new("Frame")
				local UICorner_Toggle2 = Instance.new("UICorner")
				local ImageLabel_2 = Instance.new("ImageLabel")
				local UICorner_Toggle2_2 = Instance.new("UICorner")
				local UIGradient_6 = Instance.new("UIGradient")
				local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

				Toggle.Name = "Toggle"
				Toggle.Parent = SectionFrame
				Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
				Toggle.BackgroundTransparency = 1
				Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle.BorderSizePixel = 0
				--Toggle.Position = UDim2.new(0, 0, -2.53846145, 0)
				Toggle.Size = UDim2.new(0.980000019, 0, 0.5, 0)
				Toggle.ZIndex = 5

					UIAspectRatioConstraint.Parent = Toggle
					UIAspectRatioConstraint.AspectRatio = 11.500
					UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

				UICorner_Toggle.CornerRadius = UDim.new(0, 3)
				UICorner_Toggle.Name = "UICorner_Toggle"
				UICorner_Toggle.Parent = Toggle

				Toggle_Click.Name = "Toggle_Click"
				Toggle_Click.Parent = Toggle
				Toggle_Click.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_Click.BackgroundTransparency = 1.000
				Toggle_Click.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_Click.BorderSizePixel = 0
				Toggle_Click.Size = UDim2.new(1, 0, 1, 0)
				Toggle_Click.Font = Enum.Font.SourceSans
				Toggle_Click.Text = ""
				Toggle_Click.TextColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_Click.TextSize = 1.000
				Toggle_Click.ZIndex = 6

				Toggle_Text.Name = "Toggle_Text"
				Toggle_Text.Parent = Toggle
				Toggle_Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_Text.BackgroundTransparency = 1.000
				Toggle_Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_Text.BorderSizePixel = 0
				Toggle_Text.Position = UDim2.new(0.14399981, 0, 0.32, 0)
				Toggle_Text.Size = UDim2.new(1.13500003, 0, 0.424999976, 0)
				Toggle_Text.Font = Enum.Font.GothamBold
				Toggle_Text.Text = TextName
				Toggle_Text.TextColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_Text.TextSize = 14.000
				Toggle_Text.TextXAlignment = Enum.TextXAlignment.Left
				Toggle_Text.ZIndex = 6
				Toggle_Text.TextScaled = true

				Toggle_Icon.Name = "Toggle_Icon"
				Toggle_Icon.Parent = Toggle
				Toggle_Icon.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
				Toggle_Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_Icon.BorderSizePixel = 0
				Toggle_Icon.Position = UDim2.new(0.035, 0, 0.181818187, 0)
				Toggle_Icon.Size = UDim2.new(0, 25, 0, 23)
				Toggle_Icon.ZIndex = 6

				UICorner_Toggle2.CornerRadius = UDim.new(0, 3)
				UICorner_Toggle2.Name = "UICorner_Toggle2"
				UICorner_Toggle2.Parent = Toggle_Icon

				ImageLabel_2.Parent = Toggle_Icon
				ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
				ImageLabel_2.BackgroundColor3 = Color3.fromRGB(221,160,221)
				ImageLabel_2.BackgroundTransparency = 1.000
				ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
				ImageLabel_2.BorderSizePixel = 0
				ImageLabel_2.Position = UDim2.new(0.519999981, 0, 0.550000012, 0)
				ImageLabel_2.Size = UDim2.new(0, 30, 0, 30)
				ImageLabel_2.Image = "http://www.roblox.com/asset/?id=6031068421"
				ImageLabel_2.ImageColor3 = Color3.fromRGB(221,160,221)
				ImageLabel_2.Visible = false
				ImageLabel_2.ZIndex = 6

				UICorner_Toggle2_2.CornerRadius = UDim.new(0, 3)
				UICorner_Toggle2_2.Name = "UICorner_Toggle2"
				UICorner_Toggle2_2.Parent = ImageLabel_2

	
					--UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color1), ColorSequenceKeypoint.new(1.00, Color2)}
					UIGradient_6.Parent = ImageLabel_2
	
					if default == true then
						default = true
						ImageLabel_2.Visible = true
						pcall(callback,default)
					end
	
					Toggle_Click.MouseButton1Click:Connect(function()
						if not default then
							default = true
							ImageLabel_2.Visible = true
						else
							default = false
							ImageLabel_2.Visible = false
						end
						pcall(callback,default)
					end)
				end

				function SectionInfo:AddToggle(ToggleName,ToggleDefault,Callback)
					local Toggle = Instance.new("Frame")
					local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
					local MainFrame = Instance.new("Frame")
					local UICorner = Instance.new("UICorner")
					local Text = Instance.new("TextLabel")
					local System = Instance.new("Frame")
					local UICorner_2 = Instance.new("UICorner")
					local TurnOn = Instance.new("ImageLabel")
					local Box = Instance.new("Frame")
					local UIGradient = Instance.new("UIGradient")
					local UICorner_3 = Instance.new("UICorner")

					--Properties:

					Toggle.Name = "Toggle"
					Toggle.Parent = SectionFrame
					Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Toggle.BackgroundTransparency = 1.000
					Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Toggle.BorderSizePixel = 0
					Toggle.Size = UDim2.new(0.980000019, 0, 0.5, 0)
					Toggle.ZIndex = 4

					UIAspectRatioConstraint.Parent = Toggle
					UIAspectRatioConstraint.AspectRatio = 11.500
					UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

					MainFrame.Name = "MainFrame"
					MainFrame.Parent = Toggle
					MainFrame.AnchorPoint = Vector2.new(0.5, 0)
					MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					MainFrame.BackgroundTransparency = 1.000
					MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
					MainFrame.BorderSizePixel = 0
					MainFrame.Position = UDim2.new(0.5, 0, 0, 0)
					MainFrame.Size = UDim2.new(0.949999988, 0, 1, 0)
					MainFrame.ZIndex = 5

					UICorner.CornerRadius = UDim.new(0, 3)
					UICorner.Parent = MainFrame

					Text.Name = "Text"
					Text.Parent = MainFrame
					Text.AnchorPoint = Vector2.new(0.5, 0.5)
					Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Text.BackgroundTransparency = 1.000
					Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Text.BorderSizePixel = 0
					Text.Position = UDim2.new(0.661999981, 0, 0.5, 0)
					Text.Size = UDim2.new(1.12300003, 0, 0.524999976, 0)
					Text.ZIndex = 5
					Text.Font = Enum.Font.GothamBold
					Text.Text = ToggleName or "Auto Fuck"
					Text.TextColor3 = Color3.fromRGB(255, 255, 255)
					Text.TextScaled = false
					Text.TextSize = 15.000
					Text.TextWrapped = true
					Text.TextXAlignment = Enum.TextXAlignment.Left

					System.Name = "System"
					System.Parent = MainFrame
					System.AnchorPoint = Vector2.new(0.5, 0.5)
					System.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
					System.BorderColor3 = Color3.fromRGB(0, 0, 0)
					System.BorderSizePixel = 0
					System.Position = UDim2.new(0.0419999994, 0, 0.5, 0)
					System.Size = UDim2.new(0.624999988, 0, 0.554999988, 0)
					System.SizeConstraint = Enum.SizeConstraint.RelativeYY
					System.ZIndex = 5

					UICorner_2.CornerRadius = UDim.new(0, 3)
					UICorner_2.Parent = System

					TurnOn.Name = "TurnOn"
					TurnOn.Parent = System
					TurnOn.AnchorPoint = Vector2.new(0.5, 0.5)
					TurnOn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TurnOn.BackgroundTransparency = 1.000
					TurnOn.BorderColor3 = Color3.fromRGB(0, 0, 0)
					TurnOn.BorderSizePixel = 0
					TurnOn.Position = UDim2.new(0.5, 0, 0.5, 0)
					TurnOn.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
					TurnOn.ZIndex = 6
					TurnOn.Image = "rbxassetid://3944680095"
					TurnOn.ImageColor3 = Color3.fromRGB(0, 0, 0)
					TurnOn.ImageTransparency = 1.000

					Box.Name = "Box"
					Box.Parent = System
					Box.AnchorPoint = Vector2.new(0.5, 0.5)
					Box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Box.BorderSizePixel = 0
					Box.Position = UDim2.new(0.5, 0, 0.5, 0)
					Box.ZIndex = 5

					UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Alc.Config.MainColor), ColorSequenceKeypoint.new(1.00, Alc.Config.DropColor)}
					UIGradient.Rotation = 45
					UIGradient.Parent = Box

					UICorner_3.CornerRadius = UDim.new(0, 4)
					UICorner_3.Parent = Box

					local function Onv(val)
						if val then
							TweenService:Create(TurnOn,TweenInfo.new(0.4),{
								ImageTransparency = 0
							}):Play()

							TweenService:Create(Box,TweenInfo.new(0.3),{
								Size = UDim2.fromScale(1,1)
							}):Play()

							TweenService:Create(TurnOn,TweenInfo.new(0.55),{
								ImageColor3 = Alc.Config.MainColor
							}):Play()
						else
							TweenService:Create(TurnOn,TweenInfo.new(0.4),{
								ImageTransparency = 1
							}):Play()

							TweenService:Create(Box,TweenInfo.new(0.3),{
								Size = UDim2.fromScale(0,0)
							}):Play()

							TweenService:Create(TurnOn,TweenInfo.new(0.555),{
								ImageColor3 = Color3.fromRGB(0, 0, 0)
							}):Play()
						end
					end

					Onv(ToggleDefault)

					cretate_button(MainFrame).MouseButton1Click:Connect(function()
						ToggleDefault = not ToggleDefault
						Onv(ToggleDefault)
						if Callback then
							Callback(ToggleDefault)
						end
					end)

					if ToggleDefault == true then
						ToggleDefault = true
						Onv(ToggleDefault)
						pcall(Callback,ToggleDefault)
					end

					SectionInfo:Update()

					local Config = {}

					function Config:Text(...)
						Text.Text = tostring(...)
					end

					function Config:Value(V)
						ToggleDefault =V
						Onv(V)
						if Callback then
							Callback(ToggleDefault)
						end
					end

					function Config:Delete()
						Toggle:Destroy()
						UpdateSiz()
					end

					return Config
				end

			
                function SectionInfo:MultiDropdown(Name, option, default, callback)
                    local selectedItems = default or {}
                    local isDropping = false
                    local Dropdown = Instance.new("Frame")
                    local UICorner = Instance.new("UICorner")
                    local DropTitle = Instance.new("TextLabel")
                    local DropTitle1 = Instance.new("TextLabel")
                    local DropScroll = Instance.new("ScrollingFrame")
                    local UIListLayout = Instance.new("UIListLayout")
                    local UIPadding = Instance.new("UIPadding")
                    local DropButton = Instance.new("TextButton")
                    local DropImage = Instance.new("ImageLabel")
                
                    Dropdown.Name = "Dropdown"
                    Dropdown.Parent = SectionFrame
                    Dropdown.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    Dropdown.ClipsDescendants = true
                    Dropdown.Size = UDim2.new(0.94, 0, 0, 30)
                    Dropdown.ZIndex = 6
                
                    UICorner.CornerRadius = UDim.new(0, 3)
                    UICorner.Parent = Dropdown

                    DropTitle1.Name = "DropTitle1"
    DropTitle1.Parent = Dropdown
    DropTitle1.BackgroundTransparency = 1
    DropTitle1.Size = UDim2.new(0.90, 0, 0, 20)
    DropTitle1.Font = Enum.Font.GothamBold
    DropTitle1.Text = "  " .. Name
    DropTitle1.TextColor3 = Color3.fromRGB(225, 225, 225)
    DropTitle1.TextSize = 12
    DropTitle1.TextXAlignment = Enum.TextXAlignment.Left
    DropTitle1.ZIndex = 6
                
                    DropTitle.Name = "DropTitle"
                    DropTitle.Parent = Dropdown
                    DropTitle.BackgroundTransparency = 1
                    DropTitle.Size = UDim2.new(0.90, 0, 0, 38)
                    DropTitle.Font = Enum.Font.GothamBold
                    --DropTitle.Text = "   Select Multiple: " .. default
                    DropTitle.TextColor3 = Color3.fromRGB(190, 190, 190)
                    DropTitle.TextSize = 9
                    DropTitle.TextXAlignment = Enum.TextXAlignment.Left
                    DropTitle.ZIndex = 6
                    DropTitle.TextScaled = false
                
                    DropScroll.Name = "DropScroll"
                    DropScroll.Parent = DropTitle
                    DropScroll.Active = true
                    DropScroll.BackgroundTransparency = 1
                    DropScroll.Position = UDim2.new(0, 0, 0, 31)
                    DropScroll.Size = UDim2.new(0.99, 0, 0, 150)
                    DropScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
                    DropScroll.ScrollBarThickness = 20
                    DropScroll.ZIndex = 6
                
                    UIListLayout.Parent = DropScroll
                    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                    UIListLayout.Padding = UDim.new(0, 5)
                
                    UIPadding.Parent = DropScroll
                    UIPadding.PaddingLeft = UDim.new(0, 5)
                    UIPadding.PaddingTop = UDim.new(0, 5)
                
                    DropImage.Name = "DropImage"
                    DropImage.Parent = Dropdown
                    DropImage.BackgroundTransparency = 1
                    DropImage.Position = UDim2.new(0.90, 0, 0, 6)
                    DropImage.Rotation = 180
                    DropImage.Size = UDim2.new(0, 20, 0, 20)
                    DropImage.Image = "rbxassetid://10734963191"
                    DropImage.ZIndex = 6
                
                    DropButton.Name = "DropButton"
                    DropButton.Parent = Dropdown
                    DropButton.BackgroundTransparency = 1
                    DropButton.Size = UDim2.new(0.95, 0, 0, 31)
                    DropButton.Font = Enum.Font.GothamBold
                    DropButton.Text = ""
                    DropButton.ZIndex = 6
                
                    -- Function to return formatted selected options
local function getpro()
    if #selectedItems > 0 then
        return "   " .. "Select Multiple: " .. table.concat(selectedItems, ", ")
    elseif default and #default > 0 then
        return "   " .. "Select Multiple: " .. table.concat(default, ", ")
    else
        return "   " .. "Select Multiple: "
    end
end

-- Initialize selectedItems with default values
selectedItems = default or {}
DropTitle.Text = getpro() -- Set initial text

-- Update selected items and the display dynamically
local function updateDropTitle()
    DropTitle.Text = getpro()
end

                
                    -- Create options
                    for i, v in ipairs(option) do
                        local Item = Instance.new("TextButton")
                        local UICorner1 = Instance.new("UICorner")
                
                        Item.Name = "Item"
                        Item.Parent = DropScroll
                        Item.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                        Item.Size = UDim2.new(0.99, 0, 0, 20)
                        Item.Font = Enum.Font.GothamBold
                        Item.Text = tostring(v)
                        Item.TextColor3 = Color3.fromRGB(225, 225, 225)
                        Item.TextSize = 13
                        Item.ZIndex = 6
                
                        UICorner1.CornerRadius = UDim.new(0, 4)
                        UICorner1.Parent = Item
                
                        -- Check if this option is already selected and update the item appearance
                        if table.find(selectedItems, v) then
                            Item.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                        end
                
                        -- Toggle item selection
                        Item.MouseButton1Click:Connect(function()
                            if table.find(selectedItems, v) then
                                -- Remove from selected
                                table.remove(selectedItems, table.find(selectedItems, v))
                                Item.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                            else
                                -- Add to selected
                                table.insert(selectedItems, v)
                                Item.BackgroundColor3 = Color3.fromRGB(0, 50, 0)
                            end
                            DropTitle.Text = getpro()
                            callback(selectedItems)
                        end)
                    end
                
                    -- Adjust the dropdown size dynamically based on the content
                    DropScroll.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 5)
                
                    -- Toggle dropdown visibility
                    DropButton.MouseButton1Click:Connect(function()
                        if not isDropping then
                            isDropping = true
                            Dropdown:TweenSize(UDim2.new(0.94, 0, 0, 181), "Out", "Quad", 0.3, true)
                            DropImage.Rotation = 0
                        else
                            isDropping = false
                            Dropdown:TweenSize(UDim2.new(0.94, 0, 0, 30), "Out", "Quad", 0.3, true)
                            DropImage.Rotation = 180
                        end
                    end)
                
                    -- Return the options to manipulate the dropdown further if needed
                    return {
                        Add = function(_, t)
                            local Item = Instance.new("TextButton")
                            local UICorner1 = Instance.new("UICorner")
                
                            Item.Name = "Item"
                            Item.Parent = DropScroll
                            Item.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                            Item.Size = UDim2.new(0.99, 0, 0, 20)
                            Item.Font = Enum.Font.GothamBold
                            Item.Text = tostring(t)
                            Item.TextColor3 = Color3.fromRGB(225, 225, 225)
                            Item.TextSize = 13
                            Item.ZIndex = 6
                
                            UICorner1.CornerRadius = UDim.new(0, 4)
                            UICorner1.Parent = Item
                
                            Item.MouseButton1Click:Connect(function()
                                if table.find(selectedItems, t) then
                                    table.remove(selectedItems, table.find(selectedItems, t))
                                    Item.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                                else
                                    table.insert(selectedItems, t)
                                    Item.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                                end
                                DropTitle.Text = getpro()
                                callback(selectedItems)
                            end)
                        end,
                        Clear = function()
                            selectedItems = {}
                            DropTitle.Text = "   ".."Select Multiple : "
                            for _, v in ipairs(DropScroll:GetChildren()) do
                                if v:IsA("TextButton") then
                                    v.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                                end
                            end
                            callback(selectedItems)
                        end
                    }
                end
                



				function SectionInfo:AddDropdown(Name,option,default,callback)
					local isdropping = false
					local Dropdown = Instance.new("Frame")
					local UICorner = Instance.new("UICorner")
					local UICorner1 = Instance.new("UICorner")
					local DropTitle = Instance.new("TextLabel")
					local DropScroll = Instance.new("ScrollingFrame")
					local UIListLayout = Instance.new("UIListLayout")
					local UIPadding = Instance.new("UIPadding")
					local DropButton = Instance.new("TextButton")
					local DropImage = Instance.new("ImageLabel")
					local posto1 = Instance.new("UIStroke")
					local SearchBox = Instance.new("TextBox")
					
					Dropdown.Name = "Dropdown"
					Dropdown.Parent = SectionFrame
					Dropdown.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
					Dropdown.BackgroundTransparency = 0
					Dropdown.ClipsDescendants = true
					Dropdown.Size = UDim2.new(0.925, 0, 0, 33)
					Dropdown.ZIndex = 6
					
					local UiToggle_UiStroke25 = Instance.new("UIStroke")
					UiToggle_UiStroke25.Color = Color3.fromRGB(255, 255, 255)
					UiToggle_UiStroke25.Thickness = 1
					UiToggle_UiStroke25.Transparency = 0.95
					UiToggle_UiStroke25.Name = "UiToggle_UiStroke1"
					UiToggle_UiStroke25.Parent = Dropdown
					
					UICorner.CornerRadius = UDim.new(0, 3)
					UICorner.Parent = Dropdown
					
					function getpro()
					if default then
					if table.find(option, default) then
					callback(default)
					return "   "..Name .. " : " .. default
					else
					  return "   "..Name .. " : "
					end
					else
					  return "   "..Name .. " : "
					end
					end
					
					DropTitle.Name = "DropTitle"
					DropTitle.Parent = Dropdown
					DropTitle.BackgroundColor3 = Color3.fromRGB(224,224,224)
					DropTitle.BackgroundTransparency = 1.000
					DropTitle.Size = UDim2.new(0.925, 0, 0, 33)
					DropTitle.Font = Enum.Font.GothamBold
					DropTitle.Text = getpro()
					DropTitle.TextColor3 = Color3.fromRGB(225, 225, 225)
					DropTitle.TextSize = 15.000
					DropTitle.TextXAlignment = Enum.TextXAlignment.Left
					DropTitle.ZIndex = 6
					
					DropScroll.Name = "DropScroll"
					DropScroll.Parent = DropTitle
					DropScroll.Active = true
					DropScroll.BackgroundColor3 = Color3.fromRGB(224,224,224)
					DropScroll.BackgroundTransparency = 1.000
					DropScroll.BorderSizePixel = 0
					DropScroll.Position = UDim2.new(0.04, 0, 0, 31)
					DropScroll.Size = UDim2.new(0.9989, 0, 0, 150)
					DropScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
					DropScroll.ScrollBarThickness = 10
					DropScroll.ZIndex = 6
					
					UIListLayout.Parent = DropScroll
					UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
					UIListLayout.Padding = UDim.new(0, 5)
						
					UIPadding.Parent = DropScroll
					UIPadding.PaddingLeft = UDim.new(0, 10)
					UIPadding.PaddingTop = UDim.new(0, 10)
					
					DropImage.Name = "DropImage"
					DropImage.Parent = Dropdown
					DropImage.BackgroundColor3 = Color3.fromRGB(224,224,224)
					DropImage.BackgroundTransparency = 1.000
					DropImage.Position = UDim2.new(0.93, 0, 0, 6)
					DropImage.Rotation = 180.000
					DropImage.Size = UDim2.new(0, 20, 0, 20)
					DropImage.Image = "rbxassetid://10734963191"
					DropImage.ZIndex = 6
					
					DropButton.Name = "DropButton"
					DropButton.Parent = Dropdown
					DropButton.BackgroundColor3 = Color3.fromRGB(224,224,224)
					DropButton.BackgroundTransparency = 1.000
					DropButton.Size = UDim2.new(0.999, 0, 0, 33)
					DropButton.Font = Enum.Font.GothamBold
					DropButton.Text = ""
					DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
					DropButton.TextSize = 14.000
					DropButton.ZIndex = 6

					for i,v in next,option do
					local Item = Instance.new("TextButton")
					
					Item.Name = "Item"
					Item.Parent = DropScroll
					Item.BackgroundColor3 = Color3.fromRGB(30,30,30)
					Item.BackgroundTransparency = 0.000
					Item.Position = UDim2.new(0.109489053, 0, 0.708609283, 0)
					Item.Size = UDim2.new(0.99, 0, 0, 30)
					Item.BorderSizePixel = 0
					Item.Font = Enum.Font.GothamBold
					Item.Text = tostring(v)
					Item.TextColor3 = Color3.fromRGB(225, 225, 225)
					Item.TextSize = 13.000
					Item.TextTransparency = 0
					Item.ZIndex = 6
					Item.TextXAlignment = Enum.TextXAlignment.Center

					
					
					UICorner1.CornerRadius = UDim.new(0, 4)
					UICorner1.Parent = Item
					
					Item.MouseEnter:Connect(function()
					  TweenService:Create(
						Item,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  TextTransparency = 0
						}
					  ):Play()
					  end)
					
					Item.MouseLeave:Connect(function()
					  TweenService:Create(
						Item,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  TextTransparency = 0.5
						}
					  ):Play()
					  end)
					
					Item.MouseButton1Click:Connect(function()
					  isdropping = false
					  Dropdown:TweenSize(UDim2.new(0.925, 0, 0, 33),"Out","Quad",0.3,true)
					  TweenService:Create(
						DropImage,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  Rotation = 180
						}
					  ):Play()
					  callback(Item.Text)
					  DropTitle.Text = "   "..Name.." : "..Item.Text
					  end)
					end
					
					DropScroll.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 500)
					
					DropButton.MouseButton1Click:Connect(function()
					  if isdropping == false then
					  isdropping = true
					  Dropdown:TweenSize(UDim2.new(0.925, 0, 0, 131),"Out","Quad",0.3,true)
					  TweenService:Create(
						DropImage,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  Rotation = 0
						}
					  ):Play()
					  else
						isdropping = false
					  Dropdown:TweenSize(UDim2.new(0.925, 0, 0, 33),"Out","Quad",0.3,true)
					  TweenService:Create(
						DropImage,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  Rotation = 180
						}
					  ):Play()
					  end
					  end)
					
					local dropfunc = {}
					function dropfunc:Add(t)
					local Item = Instance.new("TextButton")
					Item.Name = "Item"
					Item.Parent = DropScroll
					Item.BackgroundColor3 = Color3.fromRGB(30,30,30)
					Item.BackgroundTransparency = 0.000
					Item.Size = UDim2.new(0.99, 0, 0, 18)
					Item.BorderSizePixel = 0
					Item.Font = Enum.Font.GothamBold
					Item.Text = tostring(t)
					Item.TextColor3 = Color3.fromRGB(225, 225, 225)
					Item.TextSize = 13.000
					Item.TextTransparency = 0
					Item.ZIndex = 6
					
					local UICorner2 = Instance.new("UICorner")
					UICorner2.CornerRadius = UDim.new(0, 4)
					UICorner2.Parent = Item
					
					Item.MouseEnter:Connect(function()
					  TweenService:Create(
						Item,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  TextTransparency = 0
						}
					  ):Play()
					  end)
					
					Item.MouseLeave:Connect(function()
					  TweenService:Create(
						Item,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  TextTransparency = 0.5
						}
					  ):Play()
					  end)
					
					Item.MouseButton1Click:Connect(function()
					  isdropping = false
					  Dropdown:TweenSize(UDim2.new(0.925, 0, 0, 33),"Out","Quad",0.3,true)
					  TweenService:Create(
						DropImage,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{
						  Rotation = 180
						}
					  ):Play()
					  callback(Item.Text)
					  DropTitle.Text = "   "..Name.." : "..Item.Text
					  end)
					end
					function dropfunc:Clear()
					DropTitle.Text = "   ".."Refresh Successfully"
					DropTitle.TextColor3 = Color3.fromRGB(0, 225, 0)
					wait(.5)
					DropTitle.Text = tostring("   "..Name).." : "
					DropTitle.TextColor3 = Color3.fromRGB(225, 225, 255)
					isdropping = false
					Dropdown:TweenSize(UDim2.new(0.925, 0, 0, 33),"Out","Quad",0.3,true)
					TweenService:Create(
					  DropImage,
					  TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					  {
						Rotation = 180
					  }
					):Play()
					for i,v in next, DropScroll:GetChildren() do
					if v:IsA("TextButton") then
					v:Destroy()
					end
					end
					end
					return dropfunc
					end

					function SectionInfo:Slider(text,min,max,de,callback)
						local SliderFrame = Instance.new("Frame")
						local LabelNameSlider = Instance.new("TextLabel")
						local ShowValueFrame = Instance.new("Frame")
						local CustomValue = Instance.new("TextBox")
						local ShowValueFrameUICorner = Instance.new("UICorner")
						local ValueFrame = Instance.new("Frame")
						local ValueFrameUICorner = Instance.new("UICorner")
						local PartValue = Instance.new("Frame")
						local PartValueUICorner = Instance.new("UICorner")
						local MainValue = Instance.new("Frame")
						local MainValueUICorner = Instance.new("UICorner")
						local sliderfunc = {}
						
						SliderFrame.Name = "SliderFrame"
						SliderFrame.Parent = SectionFrame
						SliderFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
						SliderFrame.Position = UDim2.new(0.109489053, 0, 0.708609283, 0)
						SliderFrame.Size = UDim2.new(0.94, 0, 0, 40)
						SliderFrame.BackgroundTransparency = 0
						SliderFrame.ZIndex = 16
						
						local UiToggle_UiStroke28 = Instance.new("UIStroke")
						UiToggle_UiStroke28.Color = Color3.fromRGB(255, 255, 255)
						UiToggle_UiStroke28.Thickness = 1
						UiToggle_UiStroke28.Transparency = 0.95
						UiToggle_UiStroke28.Name = "UiToggle_UiStroke1"
						UiToggle_UiStroke28.Parent = SliderFrame
						
						local UICorner_7 = Instance.new("UICorner")
						UICorner_7.CornerRadius = UDim.new(0, 4)
						UICorner_7.Parent = SliderFrame
						
						LabelNameSlider.Name = "LabelNameSlider"
						LabelNameSlider.Parent = SliderFrame
						LabelNameSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						LabelNameSlider.BackgroundTransparency = 1.000
						LabelNameSlider.Position = UDim2.new(0.0229926974, 0, 0.0396823473, 0)
						LabelNameSlider.Size = UDim2.new(0, 182, 0, 25)
						LabelNameSlider.Font = Enum.Font.GothamBold
						LabelNameSlider.Text = tostring(text)
						LabelNameSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
						LabelNameSlider.TextSize = 14.000
						LabelNameSlider.TextXAlignment = Enum.TextXAlignment.Left
						LabelNameSlider.ZIndex = 16
						
						ShowValueFrame.Name = "ShowValueFrame"
						ShowValueFrame.Parent = SliderFrame
						ShowValueFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
						ShowValueFrame.BackgroundTransparency = 1
						ShowValueFrame.Position = UDim2.new(0.733576655, 0, 0.0656082779, 0)
						ShowValueFrame.Size = UDim2.new(0, 58, 0, 21)
						ShowValueFrame.ZIndex = 16
						
						CustomValue.Name = "CustomValue"
						CustomValue.Parent = ShowValueFrame
						CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
						CustomValue.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
						CustomValue.Position = UDim2.new(0.7, 0, 0.5, 0)
						CustomValue.Size = UDim2.new(0, 55, 0, 21)
						CustomValue.Font = Enum.Font.GothamBold
						CustomValue.Text = "50"
						CustomValue.TextColor3 = Color3.fromRGB(255, 255, 255)
						CustomValue.TextSize = 11.000
						CustomValue.ZIndex = 16
						
						ShowValueFrameUICorner.CornerRadius = UDim.new(0, 4)
						ShowValueFrameUICorner.Name = "ShowValueFrameUICorner"
						ShowValueFrameUICorner.Parent = CustomValue
						
						
						ValueFrame.Name = "ValueFrame"
						ValueFrame.Parent = SliderFrame
						ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
						ValueFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
						ValueFrame.Position = UDim2.new(0.5, 0, 0.8, 0)
						ValueFrame.Size = UDim2.new(0.85, 0, 0, 5)
						ValueFrame.ZIndex = 16
						
						ValueFrameUICorner.CornerRadius = UDim.new(0, 30)
						ValueFrameUICorner.Name = "ValueFrameUICorner"
						ValueFrameUICorner.Parent = ValueFrame
						
						PartValue.Name = "PartValue"
						PartValue.Parent = ValueFrame
						PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
						PartValue.BackgroundColor3 = Color3.fromRGB(221,160,221)
						PartValue.BackgroundTransparency = 1.000
						PartValue.Position = UDim2.new(0.5, 0, 0.8, 0)
						PartValue.Size = UDim2.new(0.85, 0, 0, 5)
						PartValue.ZIndex = 16
						
						PartValueUICorner.CornerRadius = UDim.new(0, 30)
						PartValueUICorner.Name = "PartValueUICorner"
						PartValueUICorner.Parent = PartValue
						
						
						MainValue.Name = "MainValue"
						MainValue.Parent = ValueFrame
						MainValue.BackgroundColor3 = Color3.fromRGB(221,160,221)
						MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
						MainValue.BorderSizePixel = 0
						MainValue.ZIndex = 16
						
						MainValueUICorner.CornerRadius = UDim.new(0, 30)
						MainValueUICorner.Name = "MainValueUICorner"
						MainValueUICorner.Parent = MainValue
						
						
						local ConneValue = Instance.new("Frame")
						ConneValue.Name = "ConneValue"
						ConneValue.Parent = PartValue
						ConneValue.AnchorPoint = Vector2.new(0.7, 0.7)
						ConneValue.BackgroundColor3 = Color3.fromRGB(221,160,221)
						ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.5,0, 0)
						ConneValue.Size = UDim2.new(0, 10, 0, 10)
						ConneValue.BorderSizePixel = 0
						ConneValue.ZIndex = 16
						
						local UICorner = Instance.new("UICorner")
						UICorner.CornerRadius = UDim.new(0, 10)
						UICorner.Parent = ConneValue
						floor = true
						
						if floor == true then
						CustomValue.Text = tostring(de and string.format((de / max) * (max - min) + min) or 0)
						else
						  CustomValue.Text = tostring(de and math.floor((de / max) * (max - min) + min) or 0)
						end
						
						local function move(input)
						local pos =
						UDim2.new(
						  math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
						  0,
						  0.5,
						  0
						)
						local pos1 =
						UDim2.new(
						  math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
						  0,
						  0,
						  5
						)
						MainValue:TweenSize(pos1, "Out", "Sine", 0.2, true)
						ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
						if floor == true then
						local value = string.format("%.0f",((pos.X.Scale * max) / max) * (max - min) + min)
						CustomValue.Text = tostring(value)
						callback(value)
						else
						  local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
						CustomValue.Text = tostring(value)
						callback(value)
						end
						end
						local dragging = false
						ConneValue.InputBegan:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = true
						  end
						  end)
						ConneValue.InputEnded:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = false
						  end
						  end)
						SliderFrame.InputBegan:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = true
						  end
						  end)
						SliderFrame.InputEnded:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = false
						  end
						  end)
						ValueFrame.InputBegan:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = true
						  end
						  end)
						ValueFrame.InputEnded:Connect(
						  function(input)
						  if input.UserInputType == Enum.UserInputType.MouseButton1 then
						  dragging = false
						  end
						  end)
						game:GetService("UserInputService").InputChanged:Connect(function(input)
						  if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						  move(input)
						  end
						  end)
						CustomValue.FocusLost:Connect(function()
						  if CustomValue.Text == "" then
						  CustomValue.Text = de
						  end
						  if tonumber(CustomValue.Text) > max then
						  CustomValue.Text = max
						  end
						  MainValue:TweenSize(UDim2.new((CustomValue.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
						  ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.6, 0) , "Out", "Sine", 0.2, true)
						  if floor == true then
						  CustomValue.Text = tostring(CustomValue.Text and string.format("%.0f",(CustomValue.Text / max) * (max - min) + min))
						  else
							CustomValue.Text = tostring(CustomValue.Text and math.floor((CustomValue.Text / max) * (max - min) + min))
						  end
						  pcall(callback, CustomValue.Text)
						  end)
						
						function sliderfunc:Update(value)
						MainValue:TweenSize(UDim2.new((value or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
						ConneValue:TweenPosition(UDim2.new((value or 0)/max, 0.5, 0.5,0, 0) , "Out", "Sine", 0.2, true)
						CustomValue.Text = value
						pcall(function()
						  callback(value)
						  end)
						end
						return sliderfunc
						end

				function SectionInfo:Button(ButtonName,callback)
					callback = callback or function()

					end

					local Button = Instance.new("Frame")
					local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
					local ButtonMainFrame = Instance.new("Frame")
					local UICorner = Instance.new("UICorner")
					local UIGradient = Instance.new("UIGradient")
					local Text = Instance.new("TextLabel")

					Button.Name = "Button"
					Button.Parent = SectionFrame
					Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Button.BackgroundTransparency = 1.000
					Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Button.BorderSizePixel = 0
					Button.Size = UDim2.new(0.980000019, 0, 0.5, 1)
					Button.ZIndex = 5

					UIAspectRatioConstraint.Parent = Button
					UIAspectRatioConstraint.AspectRatio = 15.800
					UIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize

					ButtonMainFrame.Name = "ButtonMainFrame"
					ButtonMainFrame.Parent = Button
					ButtonMainFrame.AnchorPoint = Vector2.new(0.5, 0)
					ButtonMainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ButtonMainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
					ButtonMainFrame.BorderSizePixel = 0
					ButtonMainFrame.Position = UDim2.new(0.5, 0, 0, 0)
					ButtonMainFrame.Size = UDim2.new(0.949999988, 0, 1, 0)
					ButtonMainFrame.ZIndex = 6

					UICorner.CornerRadius = UDim.new(0, 3)
					UICorner.Parent = ButtonMainFrame

					UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Alc.Config.MainColor), ColorSequenceKeypoint.new(1.00, Alc.Config.DropColor)}
					UIGradient.Rotation = 90
					UIGradient.Parent = ButtonMainFrame

					Text.Name = "Text"
					Text.Parent = ButtonMainFrame
					Text.AnchorPoint = Vector2.new(0.5, 0.5)
					Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Text.BackgroundTransparency = 1.000
					Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Text.BorderSizePixel = 0
					Text.Position = UDim2.new(0.5, 0, 0.5, 0)
					Text.Size = UDim2.new(1, 0, 0.600000024, 0)
					Text.ZIndex = 6
					Text.Font = Enum.Font.GothamBold
					Text.Text = ButtonName or "Sea Event"
					Text.TextColor3 = Color3.fromRGB(255, 255, 255)
					Text.TextScaled = false
					Text.TextSize = 14.000
					Text.TextWrapped = true

					local c = cretate_button(ButtonMainFrame)

					c.MouseButton1Down:Connect(function()
						TweenService:Create(UIGradient,TweenInfo.new(0.1),{Offset = Vector2.new(0,1)}):Play()
					end)

					c.MouseButton1Up:Connect(function()
						TweenService:Create(UIGradient,TweenInfo.new(0.1),{Offset = Vector2.new(0,0)}):Play()
					end)

					c.MouseButton1Click:Connect(callback)

					local Config = {}

					function Config:Text(...)
						Text.Text = tostring(...)
					end

					function Config:Fire(...)
						callback(...)
					end

					function Config:Delete()
						Button:Destroy()
						UpdateSiz()
					end

					return Config
				end
				return SectionInfo
			end


			return MainTab
		end

		return MenuAlc
	end
return WindowAlc
end

_G.Title = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local Window = Alc:NewWindow('', "Executor : " .. identifyexecutor(), 'rbxassetid://17775417459')
local MenuFunctions = Window:AddMenu('' .. _G.Title, "", 'ticket', 'tab')

local Tab_1 = MenuFunctions:AddTab("Information", 10723415903,"changelog,credits,etc..")
local Tab_Setting = MenuFunctions:AddTab("Configs Farm", 10734950020,"distance,bringmob")
local Tab_2 = MenuFunctions:AddTab("Main Farm", 10723407389,"farm,bossess,etc.")
local Tab_3 = MenuFunctions:AddTab("Items Farm", 15557776256,"items,swords.etc..")
local Stats = MenuFunctions:AddTab("Local Player", 10709770431,"stats,fake,etc")
local Events = MenuFunctions:AddTab("Sea Events", 10734941354,"mirrage,auto boat")
local dragons = MenuFunctions:AddTab("Dragon Events", 105643281470017,"auto dojo,belt,etc")
local Racev4 = MenuFunctions:AddTab("Race V4", 14477517268,"racev4,moons,etc.")
local Tab_4 = MenuFunctions:AddTab("Dungeon Raid", 10734932295,"autoraid,boss")
local Tab_5 = MenuFunctions:AddTab("Island Travel", 10734886004,"teleport,hop,etc..")
local Tab_6 = MenuFunctions:AddTab("Stores", 10734952479,"melee,swords,guns")
local Tab_7 = MenuFunctions:AddTab("Miscellaneous", 10734949856,"auto open,auto switch")
local Tab_8 = MenuFunctions:AddTab("Fun Visual", 6034467796,"auto v4 any race,rainfruit")

local Players = game:GetService("Players")
local player = Players.LocalPlayer 
--local imageLabel = script.Parent 
local userId = player.UserId
local thumbType = Enum.ThumbnailType.HeadShot
local thumbSize = Enum.ThumbnailSize.Size420x420

local imageUrl, isReady = Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)

local Home_Left = Tab_1:AddSection('Info',''..player.Name.."  [ User Id : "..player.UserId.." ]",'Join Zen Hub Discord For Updates! \nuse at your own risk.',''..imageUrl)


local Home_Right = Tab_1:AddSection('Changelog','Script Made By jay#0050','Join Zen Hub Discord For Updates! \nuse at your own risk.','http://www.roblox.com/asset/?id=6031233840')

local TimeGame = Home_Right:AddLabel("Time")
function UpdateTime()
	local GameTime = math.floor(workspace.DistributedGameTime + 0.5)
	local Hour = math.floor(GameTime / (60 ^ 2)) % 24;
	local Minute = math.floor(GameTime / (60 ^ 1)) % 60;
	local Second = math.floor(GameTime / (60 ^ 0)) % 60;
	local FormatTime = string.format("%02d.%02d.%02d", Hour, Minute, Second)
	TimeGame:Set("Game Time : " .. FormatTime)
end;
spawn(function()
	while task.wait() do
		UpdateTime()
	end
end)

Home_Right:AddToggle('Request Dojo Trainer Quest', DojoRequestQuest, function(Value)
    DojoRequestQuest = Value
    CancelTween(DojoRequestQuest)
end)

Home_Right:Button('Teleport to Dragon Hunter', function()
    Tween(CFrame.new(5865.80811, 1209.50269, 811.746582, -0.675207436, -6.76664627e-08, 0.737627923, 8.33632186e-09, 1, 9.93661047e-08, -0.737627923, 7.32418357e-08, -0.675207436))
end)

Home_Right:AddDropdown("Farm Distance", { "5", "10", "15", "20", "25", "30" }, "20", function(value)
    DisFarm1 = value  -- Use the correct variable name
end)

